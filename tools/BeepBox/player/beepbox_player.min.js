var beepbox;!function(t){class e{}function s(t){let e=0;for(let s=0;s<t.length;s++)e+=t[s];const s=e/t.length;let i=0,n=0;for(let e=0;e<t.length;e++)i+=n,n=t[e]-s,t[e]=i;return t.push(0),new Float64Array(t)}function i(s){let i=e.chipNoises[s].samples;if(null==i){if(i=new Float32Array(e.chipNoiseLength+1),e.chipNoises[s].samples=i,0==s){let t=1;for(let s=0;s<e.chipNoiseLength;s++){i[s]=2*(1&t)-1;let e=t>>1;1==(t+e&1)&&(e+=16384),t=e}}else if(1==s)for(let t=0;t<e.chipNoiseLength;t++)i[t]=2*Math.random()-1;else if(2==s){let t=1;for(let s=0;s<e.chipNoiseLength;s++){i[s]=2*(1&t)-1;let e=t>>1;1==(t+e&1)&&(e+=32768),t=e}}else if(3==s){let t=1;for(let s=0;s<e.chipNoiseLength;s++){i[s]=2*(1&t)-1;let e=t>>1;1==(t+e&1)&&(e+=40),t=e}}else{if(4!=s)throw new Error("Unrecognized drum index: "+s);n(i,10,11,1,1,0),n(i,11,14,.6578,.6578,0),t.inverseRealFourierTransform(i,e.chipNoiseLength),t.scaleElementsByFactor(i,1/Math.sqrt(e.chipNoiseLength))}i[e.chipNoiseLength]=i[0]}return i}function n(t,s,n,o,h,r){const a=0|Math.pow(2,s),l=Math.min(e.chipNoiseLength>>1,0|Math.pow(2,n)),c=i(0);let f=0;for(let i=a;i<l;i++){let a=o+(h-o)*(Math.log(i)/Math.LN2-s)/(n-s),l=Math.pow(2,(a-1)*e.spectrumMax+1)*a;f+=l*=Math.pow(i/2048,r),l*=c[i];const u=.61803398875*i*i*Math.PI*2;t[i]=Math.cos(u)*l,t[e.chipNoiseLength-i]=Math.sin(u)*l}return f}function o(t){const e={};for(let s=0;s<t.length;s++){const i=t[s];i.index=s,e[i.name]=i}const s=t;return s.dictionary=e,s}e.scales=o([{name:"easy :)",realName:"pentatonic major",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"easy :(",realName:"pentatonic minor",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"island :)",realName:"ryukyu",flags:[!0,!1,!1,!1,!0,!0,!1,!0,!1,!1,!1,!0]},{name:"island :(",realName:"pelog selisir",flags:[!0,!0,!1,!0,!1,!1,!1,!0,!0,!1,!1,!1]},{name:"blues :)",realName:"blues major",flags:[!0,!1,!0,!0,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"blues :(",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"normal :)",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"normal :(",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"dbl harmonic :)",realName:"double harmonic major",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"dbl harmonic :(",realName:"double harmonic minor",flags:[!0,!1,!0,!0,!1,!1,!0,!0,!0,!1,!1,!0]},{name:"strange",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"expert",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]}]),e.keys=o([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C♯",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D♯",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F♯",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G♯",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A♯",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]),e.blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1],e.tempoMin=30,e.tempoMax=300,e.reverbRange=4,e.beatsPerBarMin=3,e.beatsPerBarMax=16,e.barCountMin=1,e.barCountMax=128,e.instrumentsPerChannelMin=1,e.instrumentsPerChannelMax=10,e.partsPerBeat=24,e.ticksPerPart=2,e.rhythms=o([{name:"÷3 (triplets)",stepsPerBeat:3,ticksPerArpeggio:4,arpeggioPatterns:[[0],[0,0,1,1],[0,1,2,1]],roundUpThresholds:[5,12,18]},{name:"÷4 (standard)",stepsPerBeat:4,ticksPerArpeggio:3,arpeggioPatterns:[[0],[0,0,1,1],[0,1,2,1]],roundUpThresholds:[3,9,17,21]},{name:"÷6",stepsPerBeat:6,ticksPerArpeggio:4,arpeggioPatterns:[[0],[0,1],[0,1,2,1]],roundUpThresholds:null},{name:"÷8",stepsPerBeat:8,ticksPerArpeggio:3,arpeggioPatterns:[[0],[0,1],[0,1,2,1]],roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,ticksPerArpeggio:3,arpeggioPatterns:[[0],[0,1],[0,1,2,1]],roundUpThresholds:null}]),e.instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM"],e.instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1],e.chipWaves=o([{name:"rounded",volume:.94,samples:s([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",volume:1,samples:s([1/15,.2,5/15,7/15,.6,11/15,13/15,1,1,13/15,11/15,.6,7/15,5/15,.2,1/15,-1/15,-.2,-5/15,-7/15,-.6,-11/15,-13/15,-1,-1,-13/15,-11/15,-.6,-7/15,-5/15,-.2,-1/15])},{name:"square",volume:.5,samples:s([1,-1])},{name:"1/4 pulse",volume:.5,samples:s([1,-1,-1,-1])},{name:"1/8 pulse",volume:.5,samples:s([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",volume:.65,samples:s([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,1,-1,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",volume:.5,samples:s([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",volume:.4,samples:s([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",volume:.4,samples:s([1,-1,1,-1,1,0])}]),e.chipNoises=o([{name:"retro",volume:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",volume:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",volume:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",volume:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",volume:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null}]),e.filterCutoffMaxHz=8e3,e.filterCutoffMinHz=1,e.filterMax=.95,e.filterMaxResonance=.95,e.filterCutoffRange=11,e.filterResonanceRange=8,e.transitions=o([{name:"seamless",isSeamless:!0,attackSeconds:0,releases:!1,releaseTicks:1,slides:!1,slideTicks:3},{name:"hard",isSeamless:!1,attackSeconds:0,releases:!1,releaseTicks:3,slides:!1,slideTicks:3},{name:"soft",isSeamless:!1,attackSeconds:.025,releases:!1,releaseTicks:3,slides:!1,slideTicks:3},{name:"slide",isSeamless:!0,attackSeconds:.025,releases:!1,releaseTicks:3,slides:!0,slideTicks:3},{name:"cross fade",isSeamless:!1,attackSeconds:.04,releases:!0,releaseTicks:6,slides:!1,slideTicks:3},{name:"hard fade",isSeamless:!1,attackSeconds:0,releases:!0,releaseTicks:48,slides:!1,slideTicks:3},{name:"medium fade",isSeamless:!1,attackSeconds:.0125,releases:!0,releaseTicks:72,slides:!1,slideTicks:3},{name:"soft fade",isSeamless:!1,attackSeconds:.06,releases:!0,releaseTicks:96,slides:!1,slideTicks:6}]),e.vibratos=o([{name:"none",amplitude:0,periodsSeconds:[.14],delayParts:0},{name:"light",amplitude:.15,periodsSeconds:[.14],delayParts:0},{name:"delayed",amplitude:.3,periodsSeconds:[.14],delayParts:18},{name:"heavy",amplitude:.45,periodsSeconds:[.14],delayParts:0},{name:"shaky",amplitude:.1,periodsSeconds:[.11,.17798,.33],delayParts:0}]),e.intervals=o([{name:"union",spread:0,offset:0,volume:.7,sign:1},{name:"shimmer",spread:.018,offset:0,volume:.8,sign:1},{name:"hum",spread:.045,offset:0,volume:1,sign:1},{name:"honky tonk",spread:.09,offset:0,volume:1,sign:1},{name:"dissonant",spread:.25,offset:0,volume:.9,sign:1},{name:"fifth",spread:3.5,offset:3.5,volume:.9,sign:1},{name:"octave",spread:6,offset:6,volume:.8,sign:1},{name:"bowed",spread:.02,offset:0,volume:1,sign:-1},{name:"piano",spread:.01,offset:0,volume:1,sign:.7}]),e.effectsNames=["none","reverb","chorus","chorus & reverb"],e.volumeRange=8,e.volumeLogScale=-.5,e.panCenter=4,e.panMax=2*e.panCenter,e.chords=o([{name:"harmony",harmonizes:!0,customInterval:!1,arpeggiates:!1,isCustomInterval:!1,strumParts:0},{name:"strum",harmonizes:!0,customInterval:!1,arpeggiates:!1,isCustomInterval:!1,strumParts:1},{name:"arpeggio",harmonizes:!1,customInterval:!1,arpeggiates:!0,isCustomInterval:!1,strumParts:0},{name:"custom interval",harmonizes:!0,customInterval:!0,arpeggiates:!0,isCustomInterval:!0,strumParts:0}]),e.maxChordSize=4,e.operatorCount=4,e.algorithms=o([{name:"1←(2 3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1←(2 3←4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1←2←(3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1←(2 3)←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1←2←3←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1←3 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1 2←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1 2←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1 2)←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1 2)←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1 2 3←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1 2 3)←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1 2 3 4",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]}]),e.operatorCarrierInterval=[0,.04,-.073,.091],e.operatorAmplitudeMax=15,e.operatorFrequencies=o([{name:"1×",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1×",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2×",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2×",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3×",mult:3,hzOffset:0,amplitudeSign:1},{name:"4×",mult:4,hzOffset:0,amplitudeSign:1},{name:"5×",mult:5,hzOffset:0,amplitudeSign:1},{name:"6×",mult:6,hzOffset:0,amplitudeSign:1},{name:"7×",mult:7,hzOffset:0,amplitudeSign:1},{name:"8×",mult:8,hzOffset:0,amplitudeSign:1},{name:"9×",mult:9,hzOffset:0,amplitudeSign:1},{name:"11×",mult:11,hzOffset:0,amplitudeSign:1},{name:"13×",mult:13,hzOffset:0,amplitudeSign:1},{name:"16×",mult:16,hzOffset:0,amplitudeSign:1},{name:"20×",mult:20,hzOffset:0,amplitudeSign:1}]),e.envelopes=o([{name:"custom",type:0,speed:0},{name:"steady",type:1,speed:0},{name:"punch",type:2,speed:0},{name:"flare 1",type:3,speed:32},{name:"flare 2",type:3,speed:8},{name:"flare 3",type:3,speed:2},{name:"twang 1",type:4,speed:32},{name:"twang 2",type:4,speed:8},{name:"twang 3",type:4,speed:2},{name:"swell 1",type:5,speed:32},{name:"swell 2",type:5,speed:8},{name:"swell 3",type:5,speed:2},{name:"tremolo1",type:6,speed:4},{name:"tremolo2",type:6,speed:2},{name:"tremolo3",type:6,speed:1},{name:"tremolo4",type:7,speed:4},{name:"tremolo5",type:7,speed:2},{name:"tremolo6",type:7,speed:1},{name:"decay 1",type:8,speed:10},{name:"decay 2",type:8,speed:7},{name:"decay 3",type:8,speed:4}]),e.feedbacks=o([{name:"1⟲",indices:[[1],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[]]},{name:"3⟲",indices:[[],[],[3],[]]},{name:"4⟲",indices:[[],[],[],[4]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4]]},{name:"1→2",indices:[[],[1],[],[]]},{name:"1→3",indices:[[],[],[1],[]]},{name:"1→4",indices:[[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[]]},{name:"2→4",indices:[[],[],[],[2]]},{name:"3→4",indices:[[],[],[],[3]]},{name:"1→3 2→4",indices:[[],[],[1],[2]]},{name:"1→4 2→3",indices:[[],[],[2],[1]]},{name:"1→2→3→4",indices:[[],[1],[2],[3]]}]),e.chipNoiseLength=32768,e.spectrumBasePitch=24,e.spectrumControlPoints=30,e.spectrumControlPointsPerOctave=7,e.spectrumControlPointBits=3,e.spectrumMax=(1<<e.spectrumControlPointBits)-1,e.harmonicsControlPoints=28,e.harmonicsRendered=64,e.harmonicsControlPointBits=3,e.harmonicsMax=(1<<e.harmonicsControlPointBits)-1,e.harmonicsWavelength=2048,e.pulseWidthRange=8,e.pitchChannelCountMin=1,e.pitchChannelCountMax=6,e.noiseChannelCountMin=0,e.noiseChannelCountMax=3,e.noiseInterval=6,e.pitchesPerOctave=12,e.drumCount=12,e.pitchOctaves=7,e.windowOctaves=3,e.scrollableOctaves=e.pitchOctaves-e.windowOctaves,e.windowPitchCount=e.windowOctaves*e.pitchesPerOctave+1,e.maxPitch=e.pitchOctaves*e.pitchesPerOctave,e.maximumTonesPerChannel=2*e.maxChordSize,e.sineWaveLength=256,e.sineWaveMask=e.sineWaveLength-1,e.sineWave=function(){const t=new Float64Array(e.sineWaveLength+1);for(let s=0;s<e.sineWaveLength+1;s++)t[s]=Math.sin(s*Math.PI*2/e.sineWaveLength);return t}(),t.Config=e,t.getDrumWave=i,t.drawNoiseSpectrum=n,t.getArpeggioPitchIndex=function(t,s,i){const n=e.rhythms[s].arpeggioPatterns[t-1];return null!=n?n[i%n.length]:i%t},t.toNameMap=o}(beepbox||(beepbox={})),function(t){const e={class:!0,classList:!0,className:!0};function s(t,i){for(const n of i)if(Array.isArray(n))s(t,n);else if(n instanceof Node)t.appendChild(n);else if(n&&n.constructor===Object)for(const s of Object.keys(n)){const i=n[s];if(e[s])if("classList"===s){const e=Array.isArray(i)?i:i.split(" ");for(const s of e)t.classList.add(s)}else t.setAttribute("class",Array.isArray(i)?i.join(" "):i);else if("style"===s)if(i&&i.constructor===Object)for(const e of Object.keys(i))e.startsWith("--")?t.style.setProperty(e,i[e]):t.style.hasOwnProperty(e)?t.style[e]=i[e]:console.log("Unrecognized style property name: "+e);else t.setAttribute(s,i);else"function"==typeof i?t[s]=i:"boolean"==typeof i?i?t.setAttribute(s,""):t.removeAttribute(s):t.setAttribute(s,i)}else t.appendChild(document.createTextNode(n));return t}const i="http://www.w3.org/2000/svg";t.HTML=function(){},t.HTML.element=function(t,...e){return s(document.createElement(t),e)},t.SVG=function(){},t.SVG.element=function(t,...e){return s(document.createElementNS(i,t),e)};for(const e of"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr".split(" "))t.HTML[e]=function(...t){return s(document.createElement(e),t)};for(const e of"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern".split(" "))t.SVG[e]=function(...t){return s(document.createElementNS(i,e),t)};t.prettyNumber=function(t){return t.toFixed(2).replace(/\.?0*$/,"")}}(beepbox||(beepbox={})),function(t){class e{static getChannelColor(t,s){return s<t.pitchChannelCount?e.pitchChannels[s%e.pitchChannels.length]:e.noiseChannels[(s-t.pitchChannelCount)%e.noiseChannels.length]}static setTheme(t){this.t.textContent=this.themes[t];const e=document.querySelector("meta[name='theme-color']");null!=e&&e.setAttribute("content",getComputedStyle(document.documentElement).getPropertyValue("--ui-widget-background"))}}e.themes={"dark classic":"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t}\n\t\t\t","light classic":"\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #685d88;\n\t\t\t\t\t--editor-background: white;\n\t\t\t\t\t--hover-preview: black;\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t\t--primary-text: black;\n\t\t\t\t\t--secondary-text: #777;\n\t\t\t\t\t--inverted-text: white;\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t\t--loop-accent: #98f;\n\t\t\t\t\t--link-accent: #74f;\n\t\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t"},e.pageMargin="var(--page-margin)",e.editorBackground="var(--editor-background)",e.hoverPreview="var(--hover-preview)",e.playhead="var(--playhead)",e.primaryText="var(--primary-text)",e.secondaryText="var(--secondary-text)",e.invertedText="var(--inverted-text)",e.textSelection="var(--text-selection)",e.boxSelectionFill="var(--box-selection-fill)",e.loopAccent="var(--loop-accent)",e.linkAccent="var(--link-accent)",e.uiWidgetBackground="var(--ui-widget-background)",e.uiWidgetFocus="var(--ui-widget-focus)",e.pitchBackground="var(--pitch-background)",e.tonic="var(--tonic)",e.fifthNote="var(--fifth-note)",e.whitePianoKey="var(--white-piano-key)",e.blackPianoKey="var(--black-piano-key)",e.pitchChannels=t.toNameMap([{name:"pitch1",secondaryChannel:"var(--pitch1-secondary-channel)",primaryChannel:"var(--pitch1-primary-channel)",secondaryNote:"var(--pitch1-secondary-note)",primaryNote:"var(--pitch1-primary-note)"},{name:"pitch2",secondaryChannel:"var(--pitch2-secondary-channel)",primaryChannel:"var(--pitch2-primary-channel)",secondaryNote:"var(--pitch2-secondary-note)",primaryNote:"var(--pitch2-primary-note)"},{name:"pitch3",secondaryChannel:"var(--pitch3-secondary-channel)",primaryChannel:"var(--pitch3-primary-channel)",secondaryNote:"var(--pitch3-secondary-note)",primaryNote:"var(--pitch3-primary-note)"},{name:"pitch4",secondaryChannel:"var(--pitch4-secondary-channel)",primaryChannel:"var(--pitch4-primary-channel)",secondaryNote:"var(--pitch4-secondary-note)",primaryNote:"var(--pitch4-primary-note)"},{name:"pitch5",secondaryChannel:"var(--pitch5-secondary-channel)",primaryChannel:"var(--pitch5-primary-channel)",secondaryNote:"var(--pitch5-secondary-note)",primaryNote:"var(--pitch5-primary-note)"},{name:"pitch6",secondaryChannel:"var(--pitch6-secondary-channel)",primaryChannel:"var(--pitch6-primary-channel)",secondaryNote:"var(--pitch6-secondary-note)",primaryNote:"var(--pitch6-primary-note)"}]),e.noiseChannels=t.toNameMap([{name:"noise1",secondaryChannel:"var(--noise1-secondary-channel)",primaryChannel:"var(--noise1-primary-channel)",secondaryNote:"var(--noise1-secondary-note)",primaryNote:"var(--noise1-primary-note)"},{name:"noise2",secondaryChannel:"var(--noise2-secondary-channel)",primaryChannel:"var(--noise2-primary-channel)",secondaryNote:"var(--noise2-secondary-note)",primaryNote:"var(--noise2-primary-note)"},{name:"noise3",secondaryChannel:"var(--noise3-secondary-channel)",primaryChannel:"var(--noise3-primary-channel)",secondaryNote:"var(--noise3-secondary-note)",primaryNote:"var(--noise3-primary-note)"}]),e.t=document.head.appendChild(t.HTML.style({type:"text/css"})),t.ColorConfig=e}(beepbox||(beepbox={})),function(t){function e(t){if(!function(t){return!(!t||t&t-1)}(t))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(t)/Math.log(2))}t.scaleElementsByFactor=function(t,e){for(let s=0;s<t.length;s++)t[s]*=e},t.inverseRealFourierTransform=function(t,s){const i=e(s);if(s<4)throw new Error("FFT array length must be at least 4.");for(let e=i-1;e>=2;e--){const i=1<<e,n=i>>1,o=i<<1,h=2*Math.PI/o,r=Math.cos(h),a=Math.sin(h),l=2*r;for(let e=0;e<s;e+=o){const s=e,o=s+n,h=s+i,c=h+n,f=h+i,u=t[s],p=t[h];t[s]=u+p,t[o]*=2,t[h]=u-p,t[c]*=2;let d=r,m=-a,y=1,g=0;for(let e=1;e<n;e++){const i=s+e,n=h-e,o=h+e,r=f-e,a=t[i],c=t[n],u=t[o],p=t[r],b=a-c,v=u+p;t[i]=a+c,t[n]=p-u,t[o]=b*d-v*m,t[r]=v*d+b*m;const w=l*d-y,M=l*m-g;y=d,g=m,d=w,m=M}}}for(let e=0;e<s;e+=4){const s=e+1,i=e+2,n=e+3,o=t[e],h=2*t[s],r=t[i],a=2*t[n],l=o+r,c=o-r;t[e]=l+h,t[s]=l-h,t[i]=c+a,t[n]=c-a}!function(t,s){const i=e(s);if(i>16)throw new Error("FFT array length must not be greater than 2^16.");const n=16-i;for(let e=0;e<s;e++){let s;if((s=((s=(61680&(s=(52428&(s=(43690&e)>>1|(21845&e)<<1))>>2|(13107&s)<<2))>>4|(3855&s)<<4)>>8|(255&s)<<8)>>n)>e){let i=t[e];t[e]=t[s],t[s]=i}}}(t,s)}}(beepbox||(beepbox={})),function(t){t.Deque=class{constructor(){this.s=1,this.i=[void 0],this.o=0,this.h=0,this.l=0}pushFront(t){this.l>=this.s&&this.u(),this.h=this.h-1&this.o,this.i[this.h]=t,this.l++}pushBack(t){this.l>=this.s&&this.u(),this.i[this.h+this.l&this.o]=t,this.l++}popFront(){if(this.l<=0)throw new Error("No elements left to pop.");const t=this.i[this.h];return this.i[this.h]=void 0,this.h=this.h+1&this.o,this.l--,t}popBack(){if(this.l<=0)throw new Error("No elements left to pop.");this.l--;const t=this.h+this.l&this.o,e=this.i[t];return this.i[t]=void 0,e}peakFront(){if(this.l<=0)throw new Error("No elements left to pop.");return this.i[this.h]}peakBack(){if(this.l<=0)throw new Error("No elements left to pop.");return this.i[this.h+this.l-1&this.o]}count(){return this.l}set(t,e){if(t<0||t>=this.l)throw new Error("Invalid index");this.i[this.h+t&this.o]=e}get(t){if(t<0||t>=this.l)throw new Error("Invalid index");return this.i[this.h+t&this.o]}remove(t){if(t<0||t>=this.l)throw new Error("Invalid index");if(t<=this.l>>1){for(;t>0;)this.set(t,this.get(t-1)),t--;this.popFront()}else{for(t++;t<this.l;)this.set(t-1,this.get(t)),t++;this.popBack()}}u(){if(this.s>=1073741824)throw new Error("Capacity too big.");this.s=this.s<<1;const t=this.i,e=new Array(this.s),s=0|this.l,i=0|this.h;for(let n=0;n<s;n++)e[n]=t[i+n&this.o];for(let t=s;t<this.s;t++)e[t]=void 0;this.h=0,this.i=e,this.o=this.s-1}}}(beepbox||(beepbox={})),function(t){const e=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0];class i{constructor(t,e,i){this.p=[],this.m=0;for(let n=e;n<i;n++){const e=s[t.charCodeAt(n)];this.p.push(e>>5&1),this.p.push(e>>4&1),this.p.push(e>>3&1),this.p.push(e>>2&1),this.p.push(e>>1&1),this.p.push(1&e)}}read(t){let e=0;for(;t>0;)e<<=1,e+=this.p[this.m++],t--;return e}readLongTail(t,e){let s=t,i=e;for(;this.p[this.m++];)s+=1<<i,i++;for(;i>0;)i--,this.p[this.m++]&&(s+=1<<i);return s}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}}class n{constructor(){this.g=0,this.p=[]}clear(){this.g=0}write(t,e){for(t--;t>=0;)this.p[this.g++]=e>>>t&1,t--}writeLongTail(t,e,s){if(s<t)throw new Error("value out of bounds");s-=t;let i=e;for(;s>=1<<i;)this.p[this.g++]=1,s-=1<<i,i++;for(this.p[this.g++]=0;i>0;)i--,this.p[this.g++]=s>>>i&1}writePartDuration(t){this.writeLongTail(1,3,t)}writePinCount(t){this.writeLongTail(1,0,t)}writePitchInterval(t){t<0?(this.write(1,1),this.writeLongTail(1,3,-t)):(this.write(1,0),this.writeLongTail(1,3,t))}concat(t){for(let e=0;e<t.g;e++)this.p[this.g++]=t.p[e]}encodeBase64(t){for(let s=0;s<this.g;s+=6){const i=this.p[s]<<5|this.p[s+1]<<4|this.p[s+2]<<3|this.p[s+3]<<2|this.p[s+4]<<1|this.p[s+5];t.push(e[i])}return t}lengthBase64(){return Math.ceil(this.g/6)}}function o(t,e,s){return{interval:t,time:e,volume:s}}function h(t,e,s){return s<=(e-=1)?s>=t?s:t:e}function r(t,e,s){if(t<=s&&s<=e)return s;throw new Error(`Value ${s} not in range [${t}, ${e}]`)}t.makeNotePin=o;class a{constructor(t,e,s,i,n=!1){this.pitches=[t],this.pins=[o(0,0,i),o(0,s-e,n?0:i)],this.start=e,this.end=s}pickMainInterval(){let t=0,e=0;for(let s=1;s<this.pins.length;s++){const i=this.pins[s-1],n=this.pins[s];if(i.interval==n.interval){const s=n.time-i.time;t<s&&(t=s,e=i.interval)}}if(0==t){let t=0;for(let s=0;s<this.pins.length;s++){const i=this.pins[s];t<i.volume&&(t=i.volume,e=i.interval)}}return e}}t.Note=a;class l{constructor(){this.notes=[],this.instrument=0}cloneNotes(){const t=[];for(const e of this.notes){const s=new a(-1,e.start,e.end,3);s.pitches=e.pitches.concat(),s.pins=[];for(const t of e.pins)s.pins.push(o(t.interval,t.time,t.volume));t.push(s)}return t}reset(){this.notes.length=0,this.instrument=0}}t.Pattern=l;class c{constructor(t){this.frequency=0,this.amplitude=0,this.envelope=0,this.reset(t)}reset(e){this.frequency=0,this.amplitude=e<=1?t.Config.operatorAmplitudeMax:0,this.envelope=0==e?0:1}}t.Operator=c;class f{constructor(t){this.spectrum=[],this.v=null,this.M=!1,this.reset(t)}reset(e){for(let s=0;s<t.Config.spectrumControlPoints;s++)if(e)this.spectrum[s]=Math.round(t.Config.spectrumMax*(1/Math.sqrt(1+s/3)));else{const e=0==s||7==s||11==s||14==s||16==s||18==s||21==s||23==s||s>=25;this.spectrum[s]=e?Math.max(0,Math.round(t.Config.spectrumMax*(1-s/30))):0}this.M=!1}markCustomWaveDirty(){this.M=!1}getCustomWave(e){if(!this.M||null==this.v){let i=t.Config.chipNoiseLength;null!=this.v&&this.v.length==i+1||(this.v=new Float32Array(i+1));const n=this.v;for(let t=0;t<i;t++)n[t]=0;const o=14,h=.25,r=[0,1/7,Math.log(5/4)/Math.LN2,3/7,Math.log(1.5)/Math.LN2,5/7,6/7];function s(s){return e+Math.floor(s/t.Config.spectrumControlPointsPerOctave)+r[(s+t.Config.spectrumControlPointsPerOctave)%t.Config.spectrumControlPointsPerOctave]}let a=1;for(let e=0;e<t.Config.spectrumControlPoints+1;e++){const i=e<=0?0:this.spectrum[e-1],r=e>=t.Config.spectrumControlPoints?this.spectrum[t.Config.spectrumControlPoints-1]:this.spectrum[e],l=s(e-1);let c=s(e);e>=t.Config.spectrumControlPoints&&(c=o+(c-o)*h),0==i&&0==r||(a+=.02*t.drawNoiseSpectrum(n,l,c,i/t.Config.spectrumMax,r/t.Config.spectrumMax,-.5))}this.spectrum[t.Config.spectrumControlPoints-1]>0&&(a+=.02*t.drawNoiseSpectrum(n,o+(s(t.Config.spectrumControlPoints)-o)*h,o,this.spectrum[t.Config.spectrumControlPoints-1]/t.Config.spectrumMax,0,-.5)),t.inverseRealFourierTransform(n,i),t.scaleElementsByFactor(n,5/(Math.sqrt(i)*Math.pow(a,.75))),n[i]=n[0],this.M=!0}return this.v}}t.SpectrumWave=f;class u{constructor(){this.harmonics=[],this.v=null,this.M=!1,this.reset()}reset(){for(let e=0;e<t.Config.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=t.Config.harmonicsMax,this.harmonics[3]=t.Config.harmonicsMax,this.harmonics[6]=t.Config.harmonicsMax,this.M=!1}markCustomWaveDirty(){this.M=!1}getCustomWave(){if(!this.M||null==this.v){let e=t.Config.harmonicsWavelength;const s=t.getDrumWave(0);null!=this.v&&this.v.length==e+1||(this.v=new Float32Array(e+1));const i=this.v;for(let t=0;t<e;t++)i[t]=0;const n=-.25;let o=1;for(let h=0;h<t.Config.harmonicsRendered;h++){const r=h+1;let a=h<t.Config.harmonicsControlPoints?this.harmonics[h]:this.harmonics[t.Config.harmonicsControlPoints-1];h>=t.Config.harmonicsControlPoints&&(a*=1-(h-t.Config.harmonicsControlPoints)/(t.Config.harmonicsRendered-t.Config.harmonicsControlPoints));const l=a/t.Config.harmonicsMax;let c=Math.pow(2,a-t.Config.harmonicsMax+1)*Math.sqrt(l);h<t.Config.harmonicsControlPoints&&(o+=c),c*=Math.pow(r,n),c*=s[h+589],i[e-r]=c}t.inverseRealFourierTransform(i,e);const h=1/Math.pow(o,.7);let r=0,a=0;for(let t=0;t<i.length;t++)r+=a,a=i[t]*h,i[t]=r;i[e]=i[0],this.M=!0}return this.v}}t.HarmonicsWave=u;class p{constructor(e){this.type=0,this.preset=0,this.chipWave=2,this.chipNoise=1,this.filterCutoff=6,this.filterResonance=0,this.filterEnvelope=1,this.transition=1,this.vibrato=0,this.interval=0,this.effects=0,this.chord=1,this.volume=0,this.pan=t.Config.panCenter,this.pulseWidth=t.Config.pulseWidthRange-1,this.pulseEnvelope=1,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0,this.feedbackEnvelope=1,this.operators=[],this.harmonicsWave=new u,this.drumsetEnvelopes=[],this.drumsetSpectrumWaves=[],this.spectrumWave=new f(e);for(let e=0;e<t.Config.operatorCount;e++)this.operators[e]=new c(e);for(let e=0;e<t.Config.drumCount;e++)this.drumsetEnvelopes[e]=t.Config.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[e]=new f(!0)}setTypeAndReset(e,s){switch(this.type=e,this.preset=e,this.volume=0,this.pan=t.Config.panCenter,e){case 0:this.chipWave=2,this.filterCutoff=6,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2;break;case 1:this.transition=1,this.vibrato=0,this.effects=1,this.chord=3,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=1,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0,this.feedbackEnvelope=t.Config.envelopes.dictionary.steady.index;for(let t=0;t<this.operators.length;t++)this.operators[t].reset(t);break;case 2:this.chipNoise=1,this.transition=1,this.effects=0,this.chord=2,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index;break;case 3:this.transition=1,this.effects=1,this.chord=0,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index,this.spectrumWave.reset(s);break;case 4:this.effects=0;for(let e=0;e<t.Config.drumCount;e++)this.drumsetEnvelopes[e]=t.Config.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[e].reset(s);break;case 5:this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=0,this.harmonicsWave.reset();break;case 6:this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2,this.pulseWidth=t.Config.pulseWidthRange-1,this.pulseEnvelope=t.Config.envelopes.dictionary["twang 2"].index;break;default:throw new Error("Unrecognized instrument type: "+e)}}toJsonObject(){const e={type:t.Config.instrumentTypeNames[this.type],volume:20*(5-this.volume),pan:100*(this.pan-t.Config.panCenter)/t.Config.panCenter,effects:t.Config.effectsNames[this.effects]};if(this.preset!=this.type&&(e.preset=this.preset),4!=this.type&&(e.transition=t.Config.transitions[this.transition].name,e.chord=this.getChord().name,e.filterCutoffHz=Math.round(t.Config.filterCutoffMaxHz*Math.pow(2,this.getFilterCutoffOctaves())),e.filterResonance=Math.round(100*this.filterResonance/(t.Config.filterResonanceRange-1)),e.filterEnvelope=this.getFilterEnvelope().name),2==this.type)e.wave=t.Config.chipNoises[this.chipNoise].name;else if(3==this.type){e.spectrum=[];for(let s=0;s<t.Config.spectrumControlPoints;s++)e.spectrum[s]=Math.round(100*this.spectrumWave.spectrum[s]/t.Config.spectrumMax)}else if(4==this.type){e.drums=[];for(let s=0;s<t.Config.drumCount;s++){const i=[];for(let e=0;e<t.Config.spectrumControlPoints;e++)i[e]=Math.round(100*this.drumsetSpectrumWaves[s].spectrum[e]/t.Config.spectrumMax);e.drums[s]={filterEnvelope:this.getDrumsetEnvelope(s).name,spectrum:i}}}else if(0==this.type)e.wave=t.Config.chipWaves[this.chipWave].name,e.interval=t.Config.intervals[this.interval].name,e.vibrato=t.Config.vibratos[this.vibrato].name;else if(6==this.type)e.pulseWidth=Math.round(50*Math.pow(.5,.5*(t.Config.pulseWidthRange-this.pulseWidth-1))*32)/32,e.pulseEnvelope=t.Config.envelopes[this.pulseEnvelope].name,e.vibrato=t.Config.vibratos[this.vibrato].name;else if(5==this.type){e.interval=t.Config.intervals[this.interval].name,e.vibrato=t.Config.vibratos[this.vibrato].name,e.harmonics=[];for(let s=0;s<t.Config.harmonicsControlPoints;s++)e.harmonics[s]=Math.round(100*this.harmonicsWave.harmonics[s]/t.Config.harmonicsMax)}else{if(1!=this.type)throw new Error("Unrecognized instrument type");{const s=[];for(const e of this.operators)s.push({frequency:t.Config.operatorFrequencies[e.frequency].name,amplitude:e.amplitude,envelope:t.Config.envelopes[e.envelope].name});e.vibrato=t.Config.vibratos[this.vibrato].name,e.algorithm=t.Config.algorithms[this.algorithm].name,e.feedbackType=t.Config.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.feedbackEnvelope=t.Config.envelopes[this.feedbackEnvelope].name,e.operators=s}}return e}fromJsonObject(e,s){void 0==e&&(e={});let i=t.Config.instrumentTypeNames.indexOf(e.type);-1==i&&(i=s?2:0),this.setTypeAndReset(i,s),void 0!=e.preset&&(this.preset=e.preset>>>0),void 0!=e.volume?this.volume=h(0,t.Config.volumeRange,Math.round(5-(0|e.volume)/20)):this.volume=0,void 0!=e.pan?this.pan=h(0,t.Config.panMax+1,Math.round(t.Config.panCenter+(0|e.pan)*t.Config.panCenter/100)):this.pan=t.Config.panCenter;const n={binary:0,sudden:1,smooth:2},o=e.transition||e.envelope;if(this.transition=void 0!=n[o]?n[o]:t.Config.transitions.findIndex(t=>t.name==o),-1==this.transition&&(this.transition=1),this.effects=t.Config.effectsNames.indexOf(e.effects),-1==this.effects&&(this.effects=2==this.type?0:1),void 0!=e.filterCutoffHz?this.filterCutoff=h(0,t.Config.filterCutoffRange,Math.round(t.Config.filterCutoffRange-1+2*Math.log((0|e.filterCutoffHz)/t.Config.filterCutoffMaxHz)/Math.LN2)):this.filterCutoff=0==this.type?6:10,void 0!=e.filterResonance?this.filterResonance=h(0,t.Config.filterResonanceRange,Math.round((t.Config.filterResonanceRange-1)*(0|e.filterResonance)/100)):this.filterResonance=0,this.filterEnvelope=t.Config.envelopes.findIndex(t=>t.name==e.filterEnvelope),-1==this.filterEnvelope&&(this.filterEnvelope=t.Config.envelopes.dictionary.steady.index),void 0!=e.filter){const t=[10,6,3,0,8,5,2],s=[1,1,1,1,18,19,20],i=["none","bright","medium","soft","decay bright","decay medium","decay soft"],n={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4};let o=void 0!=n[e.filter]?n[e.filter]:i.indexOf(e.filter);-1==o&&(o=0),this.filterCutoff=t[o],this.filterEnvelope=s[o],this.filterResonance=0}const r=["none","vibrato light","vibrato delayed","vibrato heavy"];if(2==this.type)this.chipNoise=t.Config.chipNoises.findIndex(t=>t.name==e.wave),-1==this.chipNoise&&(this.chipNoise=1),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=2);else if(3==this.type){if(void 0!=e.spectrum)for(let s=0;s<t.Config.spectrumControlPoints;s++)this.spectrumWave.spectrum[s]=Math.max(0,Math.min(t.Config.spectrumMax,Math.round(t.Config.spectrumMax*+e.spectrum[s]/100)));this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=0)}else if(4==this.type){if(void 0!=e.drums)for(let s=0;s<t.Config.drumCount;s++){const i=e.drums[s];if(void 0!=i&&(void 0!=i.filterEnvelope&&(this.drumsetEnvelopes[s]=t.Config.envelopes.findIndex(t=>t.name==i.filterEnvelope),-1==this.drumsetEnvelopes[s]&&(this.drumsetEnvelopes[s]=t.Config.envelopes.dictionary["twang 2"].index)),void 0!=i.spectrum))for(let e=0;e<t.Config.spectrumControlPoints;e++)this.drumsetSpectrumWaves[s].spectrum[e]=Math.max(0,Math.min(t.Config.spectrumMax,Math.round(t.Config.spectrumMax*+i.spectrum[e]/100)))}}else if(5==this.type){if(void 0!=e.harmonics)for(let s=0;s<t.Config.harmonicsControlPoints;s++)this.harmonicsWave.harmonics[s]=Math.max(0,Math.min(t.Config.harmonicsMax,Math.round(t.Config.harmonicsMax*+e.harmonics[s]/100)));void 0!=e.interval&&(this.interval=t.Config.intervals.findIndex(t=>t.name==e.interval),-1==this.interval&&(this.interval=0)),void 0!=e.vibrato&&(this.vibrato=t.Config.vibratos.findIndex(t=>t.name==e.vibrato),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=0)}else if(6==this.type)void 0!=e.pulseWidth?this.pulseWidth=h(0,t.Config.pulseWidthRange,Math.round(Math.log(+e.pulseWidth/50)/Math.LN2/.5-1+8)):this.pulseWidth=t.Config.pulseWidthRange-1,void 0!=e.pulseEnvelope&&(this.pulseEnvelope=t.Config.envelopes.findIndex(t=>t.name==e.pulseEnvelope),-1==this.pulseEnvelope&&(this.pulseEnvelope=t.Config.envelopes.dictionary.steady.index)),void 0!=e.vibrato&&(this.vibrato=t.Config.vibratos.findIndex(t=>t.name==e.vibrato),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=0);else if(0==this.type){const s={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0};if(this.chipWave=void 0!=s[e.wave]?s[e.wave]:t.Config.chipWaves.findIndex(t=>t.name==e.wave),-1==this.chipWave&&(this.chipWave=1),void 0!=e.interval)this.interval=t.Config.intervals.findIndex(t=>t.name==e.interval),-1==this.interval&&(this.interval=0);else if(void 0!=e.chorus){const s={fifths:5,octaves:6};this.interval=void 0!=s[e.chorus]?s[e.chorus]:t.Config.intervals.findIndex(t=>t.name==e.chorus),-1==this.interval&&(this.interval=0)}void 0!=e.vibrato?(this.vibrato=t.Config.vibratos.findIndex(t=>t.name==e.vibrato),-1==this.vibrato&&(this.vibrato=0)):void 0!=e.effect&&(this.vibrato=r.indexOf(e.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=2),"custom harmony"==e.chorus&&(this.interval=2,this.chord=3)}else{if(1!=this.type)throw new Error("Unrecognized instrument type.");{void 0!=e.vibrato?(this.vibrato=t.Config.vibratos.findIndex(t=>t.name==e.vibrato),-1==this.vibrato&&(this.vibrato=0)):void 0!=e.effect&&(this.vibrato=r.indexOf(e.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.Config.chords.findIndex(t=>t.name==e.chord),-1==this.chord&&(this.chord=3),this.algorithm=t.Config.algorithms.findIndex(t=>t.name==e.algorithm),-1==this.algorithm&&(this.algorithm=0),this.feedbackType=t.Config.feedbacks.findIndex(t=>t.name==e.feedbackType),-1==this.feedbackType&&(this.feedbackType=0),void 0!=e.feedbackAmplitude?this.feedbackAmplitude=h(0,t.Config.operatorAmplitudeMax+1,0|e.feedbackAmplitude):this.feedbackAmplitude=0;const s={"pluck 1":6,"pluck 2":7,"pluck 3":8};this.feedbackEnvelope=void 0!=s[e.feedbackEnvelope]?s[e.feedbackEnvelope]:t.Config.envelopes.findIndex(t=>t.name==e.feedbackEnvelope),-1==this.feedbackEnvelope&&(this.feedbackEnvelope=0);for(let i=0;i<t.Config.operatorCount;i++){const n=this.operators[i];let o=void 0;e.operators&&(o=e.operators[i]),void 0==o&&(o={}),n.frequency=t.Config.operatorFrequencies.findIndex(t=>t.name==o.frequency),-1==n.frequency&&(n.frequency=0),void 0!=o.amplitude?n.amplitude=h(0,t.Config.operatorAmplitudeMax+1,0|o.amplitude):n.amplitude=0,n.envelope=void 0!=s[o.envelope]?s[o.envelope]:t.Config.envelopes.findIndex(t=>t.name==o.envelope),-1==n.envelope&&(n.envelope=0)}}}}static frequencyFromPitch(t){return 440*Math.pow(2,(t-69)/12)}static drumsetIndexReferenceDelta(e){return p.frequencyFromPitch(t.Config.spectrumBasePitch+6*e)/44100}static k(t){return 15+Math.log(p.drumsetIndexReferenceDelta(t))/Math.LN2}warmUp(){if(2==this.type)t.getDrumWave(this.chipNoise);else if(5==this.type)this.harmonicsWave.getCustomWave();else if(3==this.type)this.spectrumWave.getCustomWave(8);else if(4==this.type)for(let e=0;e<t.Config.drumCount;e++)this.drumsetSpectrumWaves[e].getCustomWave(p.k(e))}getDrumWave(){if(2==this.type)return t.getDrumWave(this.chipNoise);if(3==this.type)return this.spectrumWave.getCustomWave(8);throw new Error("Unhandled instrument type in getDrumWave")}getDrumsetWave(t){if(4==this.type)return this.drumsetSpectrumWaves[t].getCustomWave(p.k(t));throw new Error("Unhandled instrument type in getDrumWave")}getTransition(){return 4==this.type?t.Config.transitions.dictionary["hard fade"]:t.Config.transitions[this.transition]}getChord(){return 4==this.type?t.Config.chords.dictionary.harmony:t.Config.chords[this.chord]}getFilterCutoffOctaves(){return 4==this.type?0:.5*(this.filterCutoff-(t.Config.filterCutoffRange-1))}getFilterIsFirstOrder(){return 4!=this.type&&0==this.filterResonance}getFilterResonance(){return 4==this.type?1:this.filterResonance}getFilterEnvelope(){if(4==this.type)throw new Error("Can't getFilterEnvelope() for drumset.");return t.Config.envelopes[this.filterEnvelope]}getDrumsetEnvelope(e){if(4!=this.type)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return t.Config.envelopes[this.drumsetEnvelopes[e]]}}t.Instrument=p;class d{constructor(){this.octave=0,this.instruments=[],this.patterns=[],this.bars=[],this.muted=!1}}t.Channel=d;class m{constructor(t){this.channels=[],void 0!=t?this.fromBase64String(t):this.initToDefault(!0)}getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount}getChannelIsNoise(t){return t>=this.pitchChannelCount}initToDefault(t=!0){if(this.scale=0,this.key=0,this.loopStart=0,this.loopLength=4,this.tempo=150,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=1,this.instrumentsPerChannel=1,t){this.pitchChannelCount=3,this.noiseChannelCount=1;for(let t=0;t<this.getChannelCount();t++){this.channels.length<=t&&(this.channels[t]=new d);const e=this.channels[t];e.octave=3-t;for(let t=0;t<this.patternsPerChannel;t++)e.patterns.length<=t?e.patterns[t]=new l:e.patterns[t].reset();e.patterns.length=this.patternsPerChannel;const s=t>=this.pitchChannelCount;for(let t=0;t<this.instrumentsPerChannel;t++)e.instruments.length<=t&&(e.instruments[t]=new p(s)),e.instruments[t].setTypeAndReset(s?2:0,s);e.instruments.length=this.instrumentsPerChannel;for(let t=0;t<this.barCount;t++)e.bars[t]=t<4?1:0;e.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let s,i=[];i.push(e[m.S]),i.push(110,e[this.pitchChannelCount],e[this.noiseChannelCount]),i.push(115,e[this.scale]),i.push(107,e[this.key]),i.push(108,e[this.loopStart>>6],e[63&this.loopStart]),i.push(101,e[this.loopLength-1>>6],e[this.loopLength-1&63]),i.push(116,e[this.tempo>>6],e[63&this.tempo]),i.push(109,e[this.reverb]),i.push(97,e[this.beatsPerBar-1]),i.push(103,e[this.barCount-1>>6],e[this.barCount-1&63]),i.push(106,e[this.patternsPerChannel-1>>6],e[this.patternsPerChannel-1&63]),i.push(105,e[this.instrumentsPerChannel-1]),i.push(114,e[this.rhythm]),i.push(111);for(let t=0;t<this.getChannelCount();t++)i.push(e[this.channels[t].octave]);for(let s=0;s<this.getChannelCount();s++)for(let o=0;o<this.instrumentsPerChannel;o++){const h=this.channels[s].instruments[o];if(i.push(84,e[h.type]),i.push(118,e[h.volume]),i.push(76,e[h.pan]),i.push(117,e[h.preset>>6],e[63&h.preset]),i.push(113,e[h.effects]),4!=h.type&&(i.push(100,e[h.transition]),i.push(102,e[h.filterCutoff]),i.push(121,e[h.filterResonance]),i.push(122,e[h.filterEnvelope]),i.push(67,e[h.chord])),0==h.type)i.push(119,e[h.chipWave]),i.push(99,e[h.vibrato]),i.push(104,e[h.interval]);else if(1==h.type){i.push(99,e[h.vibrato]),i.push(65,e[h.algorithm]),i.push(70,e[h.feedbackType]),i.push(66,e[h.feedbackAmplitude]),i.push(86,e[h.feedbackEnvelope]),i.push(81);for(let s=0;s<t.Config.operatorCount;s++)i.push(e[h.operators[s].frequency]);i.push(80);for(let s=0;s<t.Config.operatorCount;s++)i.push(e[h.operators[s].amplitude]);i.push(69);for(let s=0;s<t.Config.operatorCount;s++)i.push(e[h.operators[s].envelope])}else if(2==h.type)i.push(119,e[h.chipNoise]);else if(3==h.type){i.push(83);const e=new n;for(let s=0;s<t.Config.spectrumControlPoints;s++)e.write(t.Config.spectrumControlPointBits,h.spectrumWave.spectrum[s]);e.encodeBase64(i)}else if(4==h.type){i.push(122);for(let s=0;s<t.Config.drumCount;s++)i.push(e[h.drumsetEnvelopes[s]]);i.push(83);const s=new n;for(let e=0;e<t.Config.drumCount;e++)for(let i=0;i<t.Config.spectrumControlPoints;i++)s.write(t.Config.spectrumControlPointBits,h.drumsetSpectrumWaves[e].spectrum[i]);s.encodeBase64(i)}else if(5==h.type){i.push(99,e[h.vibrato]),i.push(104,e[h.interval]),i.push(72);const s=new n;for(let e=0;e<t.Config.harmonicsControlPoints;e++)s.write(t.Config.harmonicsControlPointBits,h.harmonicsWave.harmonics[e]);s.encodeBase64(i)}else{if(6!=h.type)throw new Error("Unknown instrument type.");i.push(99,e[h.vibrato]),i.push(87,e[h.pulseWidth],e[h.pulseEnvelope])}}i.push(98),s=new n;let o=0;for(;1<<o<this.patternsPerChannel+1;)o++;for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)s.write(o,this.channels[t].bars[e]);s.encodeBase64(i),i.push(112),s=new n;const h=new n;let r=0;for(;1<<r<this.instrumentsPerChannel;)r++;for(let e=0;e<this.getChannelCount();e++){const i=this.getChannelIsNoise(e),n=i?0:12*this.channels[e].octave;let o=(i?4:12)+n;const a=i?[4,6,7,2,3,8,0,10]:[12,19,24,31,36,7,0],l=[];for(let t=0;t<a.length;t++)a[t]+=n;for(const i of this.channels[e].patterns)if(s.write(r,i.instrument),i.notes.length>0){s.write(1,1);let e=0;for(const n of i.notes){n.start>e&&(s.write(2,0),s.writePartDuration(n.start-e)),h.clear();for(let t=1;t<n.pitches.length;t++)h.write(1,1);n.pitches.length<t.Config.maxChordSize&&h.write(1,0),h.writePinCount(n.pins.length-1),h.write(2,n.pins[0].volume);let i=0,r=n.pitches[0],c=r;const f=[];for(let t=1;t<n.pins.length;t++){const e=n.pins[t],s=r+e.interval;c!=s?(h.write(1,1),f.push(s),c=s):h.write(1,0),h.writePartDuration(e.time-i),i=e.time,h.write(2,e.volume)}const u=String.fromCharCode.apply(null,h.encodeBase64([])),p=l.indexOf(u);-1==p?(s.write(2,1),s.concat(h)):(s.write(1,1),s.writeLongTail(0,0,p),l.splice(p,1)),l.unshift(u),l.length>10&&l.pop();const d=n.pitches.concat(f);for(let t=0;t<d.length;t++){const e=d[t],i=a.indexOf(e);if(-1==i){let t=0,i=o;if(i<e)for(;i!=e;)i++,-1==a.indexOf(i)&&t++;else for(;i!=e;)i--,-1==a.indexOf(i)&&t--;s.write(1,0),s.writePitchInterval(t)}else s.write(1,1),s.write(3,i),a.splice(i,1);a.unshift(e),a.length>8&&a.pop(),o=t==n.pitches.length-1?n.pitches[0]:e}e=n.end}e<this.beatsPerBar*t.Config.partsPerBeat&&(s.write(2,0),s.writePartDuration(this.beatsPerBar*t.Config.partsPerBeat-e))}else s.write(1,0)}let a=s.lengthBase64(),l=[];for(;a>0;)l.unshift(e[63&a]),a>>=6;i.push(e[l.length]),Array.prototype.push.apply(i,l),s.encodeBase64(i);if(i.length<64e3)return String.fromCharCode.apply(null,i);{let t="";for(let e=0;e<i.length;e+=64e3)t+=String.fromCharCode.apply(null,i.slice(e,e+64e3));return t}}fromBase64String(e){if(null==e||""==e)return void this.initToDefault(!0);let n=0;for(;e.charCodeAt(n)<=32;)n++;if(35==e.charCodeAt(n)&&n++,123==e.charCodeAt(n))return void this.fromJsonObject(JSON.parse(0==n?e:e.substring(n)));const c=s[e.charCodeAt(n++)];if(-1==c||c>m.S||c<m.P)return;const f=c<3,u=c<4,y=c<5,g=c<6,b=c<7,v=c<8;if(this.initToDefault(g),f){for(const t of this.channels)t.instruments[0].transition=0;this.channels[3].instruments[0].chipNoise=0}let w,M=0,k=-1;for(;n<e.length;)switch(w=e.charCodeAt(n++)){case 110:this.pitchChannelCount=s[e.charCodeAt(n++)],this.noiseChannelCount=s[e.charCodeAt(n++)],this.pitchChannelCount=r(t.Config.pitchChannelCountMin,t.Config.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=r(t.Config.noiseChannelCountMin,t.Config.noiseChannelCountMax,this.noiseChannelCount);for(let t=this.channels.length;t<this.getChannelCount();t++)this.channels[t]=new d;this.channels.length=this.getChannelCount();break;case 115:this.scale=s[e.charCodeAt(n++)],f&&10==this.scale&&(this.scale=11);break;case 107:this.key=h(0,t.Config.keys.length,b?11-s[e.charCodeAt(n++)]:s[e.charCodeAt(n++)]);break;case 108:this.loopStart=y?s[e.charCodeAt(n++)]:(s[e.charCodeAt(n++)]<<6)+s[e.charCodeAt(n++)];break;case 101:this.loopLength=y?s[e.charCodeAt(n++)]:(s[e.charCodeAt(n++)]<<6)+s[e.charCodeAt(n++)]+1;break;case 116:this.tempo=u?[95,120,151,190][s[e.charCodeAt(n++)]]:b?[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][s[e.charCodeAt(n++)]]:s[e.charCodeAt(n++)]<<6|s[e.charCodeAt(n++)],this.tempo=h(t.Config.tempoMin,t.Config.tempoMax+1,this.tempo);break;case 109:this.reverb=s[e.charCodeAt(n++)],this.reverb=h(0,t.Config.reverbRange,this.reverb);break;case 97:this.beatsPerBar=f?[6,7,8,9,10][s[e.charCodeAt(n++)]]:s[e.charCodeAt(n++)]+1,this.beatsPerBar=Math.max(t.Config.beatsPerBarMin,Math.min(t.Config.beatsPerBarMax,this.beatsPerBar));break;case 103:{const i=(s[e.charCodeAt(n++)]<<6)+s[e.charCodeAt(n++)]+1;this.barCount=r(t.Config.barCountMin,t.Config.barCountMax,i);for(let t=0;t<this.getChannelCount();t++){for(let e=this.channels[t].bars.length;e<this.barCount;e++)this.channels[t].bars[e]=1;this.channels[t].bars.length=this.barCount}}break;case 106:{let i;i=v?s[e.charCodeAt(n++)]+1:(s[e.charCodeAt(n++)]<<6)+s[e.charCodeAt(n++)]+1,this.patternsPerChannel=r(1,t.Config.barCountMax,i);for(let t=0;t<this.getChannelCount();t++){for(let e=this.channels[t].patterns.length;e<this.patternsPerChannel;e++)this.channels[t].patterns[e]=new l;this.channels[t].patterns.length=this.patternsPerChannel}}break;case 105:{const i=s[e.charCodeAt(n++)]+1;this.instrumentsPerChannel=r(t.Config.instrumentsPerChannelMin,t.Config.instrumentsPerChannelMax,i);for(let t=0;t<this.getChannelCount();t++){const e=t>=this.pitchChannelCount;for(let s=this.channels[t].instruments.length;s<this.instrumentsPerChannel;s++)this.channels[t].instruments[s]=new p(e);if(this.channels[t].instruments.length=this.instrumentsPerChannel,g)for(let s=0;s<this.instrumentsPerChannel;s++)this.channels[t].instruments[s].setTypeAndReset(e?2:0,e)}}break;case 114:this.rhythm=s[e.charCodeAt(n++)];break;case 111:if(f){const i=s[e.charCodeAt(n++)];this.channels[i].octave=h(0,t.Config.scrollableOctaves+1,s[e.charCodeAt(n++)])}else for(let i=0;i<this.getChannelCount();i++)this.channels[i].octave=h(0,t.Config.scrollableOctaves+1,s[e.charCodeAt(n++)]);break;case 84:{++k>=this.instrumentsPerChannel&&(M++,k=0),r(0,this.channels.length-1,M);const t=this.channels[M].instruments[k],i=r(0,6,s[e.charCodeAt(n++)]);t.setTypeAndReset(i,M>=this.pitchChannelCount)}break;case 117:{const t=s[e.charCodeAt(n++)]<<6|s[e.charCodeAt(n++)];this.channels[M].instruments[k].preset=t}break;case 119:if(f){const i=[1,2,3,4,5,6,7,8,0],o=s[e.charCodeAt(n++)];this.channels[o].instruments[0].chipWave=h(0,t.Config.chipWaves.length,0|i[s[e.charCodeAt(n++)]])}else if(g){const i=[1,2,3,4,5,6,7,8,0];for(let o=0;o<this.getChannelCount();o++)for(let r=0;r<this.instrumentsPerChannel;r++)o>=this.pitchChannelCount?this.channels[o].instruments[r].chipNoise=h(0,t.Config.chipNoises.length,s[e.charCodeAt(n++)]):this.channels[o].instruments[r].chipWave=h(0,t.Config.chipWaves.length,0|i[s[e.charCodeAt(n++)]])}else if(b){const i=[1,2,3,4,5,6,7,8,0];M>=this.pitchChannelCount?this.channels[M].instruments[k].chipNoise=h(0,t.Config.chipNoises.length,s[e.charCodeAt(n++)]):this.channels[M].instruments[k].chipWave=h(0,t.Config.chipWaves.length,0|i[s[e.charCodeAt(n++)]])}else M>=this.pitchChannelCount?this.channels[M].instruments[k].chipNoise=h(0,t.Config.chipNoises.length,s[e.charCodeAt(n++)]):this.channels[M].instruments[k].chipWave=h(0,t.Config.chipWaves.length,s[e.charCodeAt(n++)]);break;case 102:if(b){const t=[10,6,3,0,8,5,2],i=[1,1,1,1,18,19,20],o=["none","bright","medium","soft","decay bright","decay medium","decay soft"];if(f){const r=s[e.charCodeAt(n++)],a=this.channels[r].instruments[0],l=[1,3,4,5][h(0,o.length,s[e.charCodeAt(n++)])];a.filterCutoff=t[l],a.filterEnvelope=i[l],a.filterResonance=0}else if(g)for(let r=0;r<this.getChannelCount();r++)for(let a=0;a<this.instrumentsPerChannel;a++){const l=this.channels[r].instruments[a],c=h(0,o.length,s[e.charCodeAt(n++)]+1);r<this.pitchChannelCount?(l.filterCutoff=t[c],l.filterEnvelope=i[c],l.filterResonance=0):(l.filterCutoff=10,l.filterEnvelope=1,l.filterResonance=0)}else{const r=h(0,o.length,s[e.charCodeAt(n++)]),a=this.channels[M].instruments[k];a.filterCutoff=t[r],a.filterEnvelope=i[r],a.filterResonance=0}}else{this.channels[M].instruments[k].filterCutoff=h(0,t.Config.filterCutoffRange,s[e.charCodeAt(n++)])}break;case 121:this.channels[M].instruments[k].filterResonance=h(0,t.Config.filterResonanceRange,s[e.charCodeAt(n++)]);break;case 122:{const i=this.channels[M].instruments[k];if(4==i.type)for(let o=0;o<t.Config.drumCount;o++)i.drumsetEnvelopes[o]=h(0,t.Config.envelopes.length,s[e.charCodeAt(n++)]);else i.filterEnvelope=h(0,t.Config.envelopes.length,s[e.charCodeAt(n++)])}break;case 87:{const i=this.channels[M].instruments[k];i.pulseWidth=h(0,t.Config.pulseWidthRange,s[e.charCodeAt(n++)]),i.pulseEnvelope=h(0,t.Config.envelopes.length,s[e.charCodeAt(n++)])}break;case 100:if(f){const i=s[e.charCodeAt(n++)];this.channels[i].instruments[0].transition=h(0,t.Config.transitions.length,s[e.charCodeAt(n++)])}else if(g)for(let i=0;i<this.getChannelCount();i++)for(let o=0;o<this.instrumentsPerChannel;o++)this.channels[i].instruments[o].transition=h(0,t.Config.transitions.length,s[e.charCodeAt(n++)]);else this.channels[M].instruments[k].transition=h(0,t.Config.transitions.length,s[e.charCodeAt(n++)]);break;case 99:if(f){const t=[0,3,2,0],i=[1,1,1,13],o=s[e.charCodeAt(n++)],r=h(0,t.length,s[e.charCodeAt(n++)]),a=this.channels[o].instruments[0];a.vibrato=t[r],a.filterEnvelope=1==a.filterEnvelope?i[r]:a.filterEnvelope}else if(g){const t=[0,1,2,3,0,0],i=[1,1,1,1,16,13];for(let o=0;o<this.getChannelCount();o++)for(let r=0;r<this.instrumentsPerChannel;r++){const a=h(0,t.length,s[e.charCodeAt(n++)]),l=this.channels[o].instruments[r];l.vibrato=t[a],l.filterEnvelope=1==l.filterEnvelope?i[a]:l.filterEnvelope}}else if(b){const t=[0,1,2,3,0,0],i=[1,1,1,1,16,13],o=h(0,t.length,s[e.charCodeAt(n++)]),r=this.channels[M].instruments[k];r.vibrato=t[o],r.filterEnvelope=1==r.filterEnvelope?i[o]:r.filterEnvelope}else{const i=h(0,t.Config.vibratos.length,s[e.charCodeAt(n++)]);this.channels[M].instruments[k].vibrato=i}break;case 104:if(f){const i=s[e.charCodeAt(n++)];this.channels[i].instruments[0].interval=h(0,t.Config.intervals.length,s[e.charCodeAt(n++)])}else if(g)for(let i=0;i<this.getChannelCount();i++)for(let o=0;o<this.instrumentsPerChannel;o++){const r=s[e.charCodeAt(n++)];let a=h(0,t.Config.intervals.length,r);8==r&&(a=2,this.channels[i].instruments[o].chord=3),this.channels[i].instruments[o].interval=a}else if(b){const i=s[e.charCodeAt(n++)];let o=h(0,t.Config.intervals.length,i);8==i&&(o=2,this.channels[M].instruments[k].chord=3),this.channels[M].instruments[k].interval=o}else this.channels[M].instruments[k].interval=h(0,t.Config.intervals.length,s[e.charCodeAt(n++)]);break;case 67:this.channels[M].instruments[k].chord=h(0,t.Config.chords.length,s[e.charCodeAt(n++)]);break;case 113:this.channels[M].instruments[k].effects=h(0,t.Config.effectsNames.length,s[e.charCodeAt(n++)]);break;case 118:if(f){const i=s[e.charCodeAt(n++)],o=this.channels[i].instruments[0];o.volume=h(0,t.Config.volumeRange,s[e.charCodeAt(n++)]),5==o.volume&&(o.volume=t.Config.volumeRange-1)}else if(g)for(let i=0;i<this.getChannelCount();i++)for(let o=0;o<this.instrumentsPerChannel;o++){const r=this.channels[i].instruments[o];r.volume=h(0,t.Config.volumeRange,s[e.charCodeAt(n++)]),5==r.volume&&(r.volume=t.Config.volumeRange-1)}else if(b){const i=this.channels[M].instruments[k];i.volume=h(0,t.Config.volumeRange,s[e.charCodeAt(n++)]),5==i.volume&&(i.volume=t.Config.volumeRange-1)}else{this.channels[M].instruments[k].volume=h(0,t.Config.volumeRange,s[e.charCodeAt(n++)])}break;case 76:this.channels[M].instruments[k].pan=h(0,t.Config.panMax+1,s[e.charCodeAt(n++)]);break;case 65:this.channels[M].instruments[k].algorithm=h(0,t.Config.algorithms.length,s[e.charCodeAt(n++)]);break;case 70:this.channels[M].instruments[k].feedbackType=h(0,t.Config.feedbacks.length,s[e.charCodeAt(n++)]);break;case 66:this.channels[M].instruments[k].feedbackAmplitude=h(0,t.Config.operatorAmplitudeMax+1,s[e.charCodeAt(n++)]);break;case 86:this.channels[M].instruments[k].feedbackEnvelope=h(0,t.Config.envelopes.length,s[e.charCodeAt(n++)]);break;case 81:for(let i=0;i<t.Config.operatorCount;i++)this.channels[M].instruments[k].operators[i].frequency=h(0,t.Config.operatorFrequencies.length,s[e.charCodeAt(n++)]);break;case 80:for(let i=0;i<t.Config.operatorCount;i++)this.channels[M].instruments[k].operators[i].amplitude=h(0,t.Config.operatorAmplitudeMax+1,s[e.charCodeAt(n++)]);break;case 69:for(let i=0;i<t.Config.operatorCount;i++)this.channels[M].instruments[k].operators[i].envelope=h(0,t.Config.envelopes.length,s[e.charCodeAt(n++)]);break;case 83:{const s=this.channels[M].instruments[k];if(3==s.type){const o=Math.ceil(t.Config.spectrumControlPoints*t.Config.spectrumControlPointBits/6),h=new i(e,n,n+o);for(let e=0;e<t.Config.spectrumControlPoints;e++)s.spectrumWave.spectrum[e]=h.read(t.Config.spectrumControlPointBits);s.spectrumWave.markCustomWaveDirty(),n+=o}else{if(4!=s.type)throw new Error("Unhandled instrument type for spectrum song tag code.");{const o=Math.ceil(t.Config.drumCount*t.Config.spectrumControlPoints*t.Config.spectrumControlPointBits/6),h=new i(e,n,n+o);for(let e=0;e<t.Config.drumCount;e++){for(let i=0;i<t.Config.spectrumControlPoints;i++)s.drumsetSpectrumWaves[e].spectrum[i]=h.read(t.Config.spectrumControlPointBits);s.drumsetSpectrumWaves[e].markCustomWaveDirty()}n+=o}}}break;case 72:{const s=this.channels[M].instruments[k],o=Math.ceil(t.Config.harmonicsControlPoints*t.Config.harmonicsControlPointBits/6),h=new i(e,n,n+o);for(let e=0;e<t.Config.harmonicsControlPoints;e++)s.harmonicsWave.harmonics[e]=h.read(t.Config.harmonicsControlPointBits);s.harmonicsWave.markCustomWaveDirty(),n+=o}break;case 98:{let t;if(f){const o=s[e.charCodeAt(n++)],h=s[e.charCodeAt(n++)];t=Math.ceil(.5*h);const r=new i(e,n,n+t);for(let t=0;t<h;t++)this.channels[o].bars[t]=r.read(3)+1}else if(y){let s=0;for(;1<<s<this.patternsPerChannel;)s++;t=Math.ceil(this.getChannelCount()*this.barCount*s/6);const o=new i(e,n,n+t);for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)this.channels[t].bars[e]=o.read(s)+1}else{let s=0;for(;1<<s<this.patternsPerChannel+1;)s++;t=Math.ceil(this.getChannelCount()*this.barCount*s/6);const o=new i(e,n,n+t);for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)this.channels[t].bars[e]=o.read(s)}n+=t}break;case 112:{let h,l=0;if(f)h=s[e.charCodeAt(n++)],n++,l=s[e.charCodeAt(n++)],l<<=6,l+=s[e.charCodeAt(n++)];else{h=0;let t=r(1,4,s[e.charCodeAt(n++)]);for(;t>0;)l<<=6,l+=s[e.charCodeAt(n++)],t--}const c=new i(e,n,n+l);n+=l;let u=0;for(;1<<u<this.instrumentsPerChannel;)u++;for(;;){const e=this.getChannelIsNoise(h),s=e?0:12*this.channels[h].octave;let i=null,n=null,l=(e?4:12)+s;const p=e?[4,6,7,2,3,8,0,10]:[12,19,24,31,36,7,0],d=[];for(let t=0;t<p.length;t++)p[t]+=s;for(let e=0;e<this.patternsPerChannel;e++){const s=this.channels[h].patterns[e];if(s.reset(),s.instrument=c.read(u),!f&&0==c.read(1))continue;let m=0;const y=s.notes;for(;m<this.beatsPerBar*t.Config.partsPerBeat;){const e=1==c.read(1);let s=!1,h=0;if(e?h=r(0,d.length-1,c.readLongTail(0,0)):s=1==c.read(1),e||s){let s,f,u;if(e)s=d[h],d.splice(h,1);else{for((s={}).pitchCount=1;s.pitchCount<t.Config.maxChordSize&&1==c.read(1);)s.pitchCount++;s.pinCount=c.readPinCount(),s.initialVolume=c.read(2),s.pins=[],s.length=0,s.bendCount=0;for(let e=0;e<s.pinCount;e++)(f={}).pitchBend=1==c.read(1),f.pitchBend&&s.bendCount++,s.length+=b?c.readLegacyPartDuration()*t.Config.partsPerBeat/t.Config.rhythms[this.rhythm].stepsPerBeat:c.readPartDuration(),f.time=s.length,f.volume=c.read(2),s.pins.push(f)}d.unshift(s),d.length>10&&d.pop(),(i=new a(0,m,m+s.length,s.initialVolume)).pitches=[],i.pins.length=1;const g=[];for(let t=0;t<s.pitchCount+s.bendCount;t++){if(1==c.read(1)){const t=r(0,p.length-1,c.read(3));u=p[t],p.splice(t,1)}else{const t=c.readPitchInterval();u=l;let e=t;for(;e>0;){for(u++;-1!=p.indexOf(u);)u++;e--}for(;e<0;){for(u--;-1!=p.indexOf(u);)u--;e++}}p.unshift(u),p.length>8&&p.pop(),t<s.pitchCount?i.pitches.push(u):g.push(u),l=t==s.pitchCount-1?i.pitches[0]:u}g.unshift(i.pitches[0]);for(const t of s.pins)t.pitchBend&&g.shift(),n=o(g[0]-i.pitches[0],t.time,t.volume),i.pins.push(n);m=r(0,this.beatsPerBar*t.Config.partsPerBeat,i.end),y.push(i)}else{m+=b?c.readLegacyPartDuration()*t.Config.partsPerBeat/t.Config.rhythms[this.rhythm].stepsPerBeat:c.readPartDuration()}}}if(f)break;if(++h>=this.getChannelCount())break}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(w)+" at index "+(n-1))}}toJsonObject(e=!0,s=1,i=!0){const n=[];for(let o=0;o<this.getChannelCount();o++){const h=[],r=this.getChannelIsNoise(o);for(let t=0;t<this.instrumentsPerChannel;t++)h.push(this.channels[o].instruments[t].toJsonObject());const a=[];for(const e of this.channels[o].patterns){const s=[];for(const i of e.notes){const e=[];for(const s of i.pins)e.push({tick:(s.time+i.start)*t.Config.rhythms[this.rhythm].stepsPerBeat/t.Config.partsPerBeat,pitchBend:s.interval,volume:Math.round(100*s.volume/3)});s.push({pitches:i.pitches,points:e})}a.push({instrument:e.instrument+1,notes:s})}const l=[];if(e)for(let t=0;t<this.loopStart;t++)l.push(this.channels[o].bars[t]);for(let t=0;t<s;t++)for(let t=this.loopStart;t<this.loopStart+this.loopLength;t++)l.push(this.channels[o].bars[t]);if(i)for(let t=this.loopStart+this.loopLength;t<this.barCount;t++)l.push(this.channels[o].bars[t]);n.push({type:r?"drum":"pitch",octaveScrollBar:this.channels[o].octave,instruments:h,patterns:a,sequence:l})}return{format:m.T,version:m.S,scale:t.Config.scales[this.scale].name,key:t.Config.keys[this.key].name,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:t.Config.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,channels:n}}fromJsonObject(e){if(this.initToDefault(!0),!e)return;if(this.scale=11,void 0!=e.scale){const s={"romani :)":"dbl harmonic :)","romani :(":"dbl harmonic :(",enigma:"strange"},i=void 0!=s[e.scale]?s[e.scale]:e.scale,n=t.Config.scales.findIndex(t=>t.name==i);-1!=n&&(this.scale=n)}if(void 0!=e.key)if("number"==typeof e.key)this.key=(e.key+1200>>>0)%t.Config.keys.length;else if("string"==typeof e.key){const t=e.key,s=t.charAt(0).toUpperCase(),i=t.charAt(1).toLowerCase();let n={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[s];const o={"#":1,"♯":1,b:-1,"♭":-1}[i];void 0!=n&&(void 0!=o&&(n+=o),n<0&&(n+=12),n%=12,this.key=n)}void 0!=e.beatsPerMinute&&(this.tempo=h(t.Config.tempoMin,t.Config.tempoMax+1,0|e.beatsPerMinute)),void 0!=e.reverb&&(this.reverb=h(0,t.Config.reverbRange,0|e.reverb)),void 0!=e.beatsPerBar&&(this.beatsPerBar=Math.max(t.Config.beatsPerBarMin,Math.min(t.Config.beatsPerBarMax,0|e.beatsPerBar)));let s=4;void 0!=e.ticksPerBeat&&(s=0|e.ticksPerBeat||4,this.rhythm=t.Config.rhythms.findIndex(t=>t.stepsPerBeat==s),-1==this.rhythm&&(this.rhythm=1));let i=1,n=1,r=1;if(e.channels)for(const t of e.channels)t.instruments&&(i=Math.max(i,0|t.instruments.length)),t.patterns&&(n=Math.max(n,0|t.patterns.length)),t.sequence&&(r=Math.max(r,0|t.sequence.length));this.instrumentsPerChannel=Math.min(i,t.Config.instrumentsPerChannelMax),this.patternsPerChannel=Math.min(n,t.Config.barCountMax),this.barCount=Math.min(r,t.Config.barCountMax),void 0!=e.introBars&&(this.loopStart=h(0,this.barCount,0|e.introBars)),void 0!=e.loopBars&&(this.loopLength=h(1,this.barCount-this.loopStart+1,0|e.loopBars));const c=[],f=[];if(e.channels)for(let i=0;i<e.channels.length;i++){let n=e.channels[i];const r=new d;let u=!1;(u=void 0!=n.type?"drum"==n.type:i>=3)?f.push(r):c.push(r),void 0!=n.octaveScrollBar&&(r.octave=h(0,t.Config.scrollableOctaves+1,0|n.octaveScrollBar));for(let t=r.instruments.length;t<this.instrumentsPerChannel;t++)r.instruments[t]=new p(u);r.instruments.length=this.instrumentsPerChannel;for(let t=r.patterns.length;t<this.patternsPerChannel;t++)r.patterns[t]=new l;r.patterns.length=this.patternsPerChannel;for(let t=0;t<this.barCount;t++)r.bars[t]=1;r.bars.length=this.barCount;for(let t=0;t<this.instrumentsPerChannel;t++){r.instruments[t].fromJsonObject(n.instruments[t],u)}for(let e=0;e<this.patternsPerChannel;e++){const i=r.patterns[e];let l=void 0;if(n.patterns&&(l=n.patterns[e]),void 0!=l&&(i.instrument=h(0,this.instrumentsPerChannel,(0|l.instrument)-1),l.notes&&l.notes.length>0)){const e=Math.min(this.beatsPerBar*t.Config.partsPerBeat,l.notes.length>>>0);let n=0;for(let h=0;h<l.notes.length&&!(h>=e);h++){const e=l.notes[h];if(!(e&&e.pitches&&e.pitches.length>=1&&e.points&&e.points.length>=2))continue;const r=new a(0,0,0,0);r.pitches=[],r.pins=[];for(let s=0;s<e.pitches.length;s++){const i=0|e.pitches[s];if(-1==r.pitches.indexOf(i)&&(r.pitches.push(i),r.pitches.length>=t.Config.maxChordSize))break}if(r.pitches.length<1)continue;let c=n,f=0;for(let i=0;i<e.points.length;i++){const n=e.points[i];if(void 0==n||void 0==n.tick)continue;const h=void 0==n.pitchBend?0:0|n.pitchBend,a=Math.round(+n.tick*t.Config.partsPerBeat/s),l=void 0==n.volume?3:Math.max(0,Math.min(3,Math.round(3*(0|n.volume)/100)));if(!(a>this.beatsPerBar*t.Config.partsPerBeat)){if(0==r.pins.length){if(a<c)continue;r.start=a,f=h}else if(a<=c)continue;c=a,r.pins.push(o(h-f,a-r.start,l))}}if(r.pins.length<2)continue;r.end=r.pins[r.pins.length-1].time+r.start;const p=u?t.Config.drumCount-1:t.Config.maxPitch;let d=p,m=0;for(let t=0;t<r.pitches.length;t++)r.pitches[t]+=f,(r.pitches[t]<0||r.pitches[t]>p)&&(r.pitches.splice(t,1),t--),r.pitches[t]<d&&(d=r.pitches[t]),r.pitches[t]>m&&(m=r.pitches[t]);if(!(r.pitches.length<1)){for(let t=0;t<r.pins.length;t++){const e=r.pins[t];e.interval+d<0&&(e.interval=-d),e.interval+m>p&&(e.interval=p-m),t>=2&&e.interval==r.pins[t-1].interval&&e.interval==r.pins[t-2].interval&&e.volume==r.pins[t-1].volume&&e.volume==r.pins[t-2].volume&&(r.pins.splice(t-1,1),t--)}i.notes.push(r),n=r.end}}}}for(let t=0;t<this.barCount;t++)r.bars[t]=n.sequence?Math.min(this.patternsPerChannel,n.sequence[t]>>>0):0}c.length>t.Config.pitchChannelCountMax&&(c.length=t.Config.pitchChannelCountMax),f.length>t.Config.noiseChannelCountMax&&(f.length=t.Config.noiseChannelCountMax),this.pitchChannelCount=c.length,this.noiseChannelCount=f.length,this.channels.length=0,Array.prototype.push.apply(this.channels,c),Array.prototype.push.apply(this.channels,f)}getPattern(t,e){if(e<0||e>=this.barCount)return null;const s=this.channels[t].bars[e];return 0==s?null:this.channels[t].patterns[s-1]}getPatternInstrument(t,e){const s=this.getPattern(t,e);return null==s?0:s.instrument}getBeatsPerMinute(){return this.tempo}}m.T="BeepBox",m.P=2,m.S=8,t.Song=m;class y{constructor(){this.pitches=[0,0,0,0],this.pitchCount=0,this.chordSize=0,this.drumsetPitch=0,this.note=null,this.prevNote=null,this.nextNote=null,this.prevNotePitchIndex=0,this.nextNotePitchIndex=0,this.active=!1,this.noteStart=0,this.noteEnd=0,this.noteLengthTicks=0,this.ticksSinceReleased=0,this.liveInputSamplesHeld=0,this.lastInterval=0,this.lastVolume=0,this.stereoVolume1=0,this.stereoVolume2=0,this.stereoOffset=0,this.stereoDelay=0,this.sample=0,this.phases=[],this.phaseDeltas=[],this.volumeStarts=[],this.volumeDeltas=[],this.volumeStart=0,this.volumeDelta=0,this.phaseDeltaScale=0,this.pulseWidth=0,this.pulseWidthDelta=0,this.filter=0,this.filterScale=0,this.filterSample0=0,this.filterSample1=0,this.vibratoScale=0,this.intervalMult=0,this.intervalVolumeMult=1,this.feedbackOutputs=[],this.feedbackMult=0,this.feedbackDelta=0,this.reset()}reset(){for(let e=0;e<t.Config.operatorCount;e++)this.phases[e]=0,this.feedbackOutputs[e]=0;this.sample=0,this.filterSample0=0,this.filterSample1=0,this.liveInputSamplesHeld=0}}class g{constructor(e=null){this.samplesPerSecond=44100,this.song=null,this.liveInputDuration=0,this.liveInputStarted=!1,this.liveInputPitches=[],this.liveInputChannel=0,this.loopRepeatCount=-1,this.volume=1,this.playheadInternal=0,this.bar=0,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0,this.isPlayingSong=!1,this.liveInputEndTime=0,this.tonePool=new t.Deque,this.activeTones=[],this.releasedTones=[],this.liveInputTones=new t.Deque,this.limit=0,this.stereoBufferIndex=0,this.samplesForNone=null,this.samplesForReverb=null,this.samplesForChorus=null,this.samplesForChorusReverb=null,this.chorusDelayLine=new Float32Array(2048),this.chorusDelayPos=0,this.chorusPhase=0,this.reverbDelayLine=new Float32Array(16384),this.reverbDelayPos=0,this.reverbFeedback0=0,this.reverbFeedback1=0,this.reverbFeedback2=0,this.reverbFeedback3=0,this.audioCtx=null,this.scriptNode=null,this.audioProcessCallback=(t=>{const e=t.outputBuffer,s=e.getChannelData(0),i=e.getChannelData(1);if(performance.now()<this.liveInputEndTime||this.isPlayingSong)this.synthesize(s,i,e.length,this.isPlayingSong);else{for(let t=0;t<e.length;t++)s[t]=0,i[t]=0;this.deactivateAudio()}}),null!=e&&this.setSong(e)}static warmUpSynthesizer(t){if(null!=t)for(let e=0;e<t.getChannelCount();e++)for(let s=0;s<t.instrumentsPerChannel;s++)g.getInstrumentSynthFunction(t.channels[e].instruments[s]),t.channels[e].instruments[s].warmUp()}static operatorAmplitudeCurve(t){return(Math.pow(16,t/15)-1)/15}get playing(){return this.isPlayingSong}get playhead(){return this.playheadInternal}set playhead(e){if(null!=this.song){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let s=this.playheadInternal;this.bar=Math.floor(s),s=this.song.beatsPerBar*(s-this.bar),this.beat=Math.floor(s),s=t.Config.partsPerBeat*(s-this.beat),this.part=Math.floor(s),s=t.Config.ticksPerPart*(s-this.part),this.tick=Math.floor(s);const i=this.getSamplesPerTick();s=i*(s-this.tick),this.tickSampleCountdown=Math.floor(i-s)}}getSamplesPerBar(){if(null==this.song)throw new Error;return this.getSamplesPerTick()*t.Config.ticksPerPart*t.Config.partsPerBeat*this.song.beatsPerBar}getTotalBars(t,e){if(null==this.song)throw new Error;let s=this.song.loopLength*(this.loopRepeatCount+1);return t&&(s+=this.song.loopStart),e&&(s+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),s}setSong(t){"string"==typeof t?this.song=new m(t):t instanceof m&&(this.song=t)}activateAudio(){null!=this.audioCtx&&null!=this.scriptNode||(this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(2048,0,2):this.audioCtx.createJavaScriptNode(2048,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination)),this.audioCtx.resume()}deactivateAudio(){null!=this.audioCtx&&null!=this.scriptNode&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.isPlayingSong=!0,g.warmUpSynthesizer(this.song),this.activateAudio())}pause(){this.isPlayingSong&&(this.isPlayingSong=!1)}snapToStart(){this.bar=0,this.snapToBar()}goToBar(t){this.bar=t,this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}resetEffects(){this.reverbDelayPos=0,this.reverbFeedback0=0,this.reverbFeedback1=0,this.reverbFeedback2=0,this.reverbFeedback3=0,this.freeAllTones();for(let t=0;t<this.reverbDelayLine.length;t++)this.reverbDelayLine[t]=0;for(let t=0;t<this.chorusDelayLine.length;t++)this.chorusDelayLine[t]=0;if(null!=this.samplesForNone)for(let t=0;t<this.samplesForNone.length;t++)this.samplesForNone[t]=0;if(null!=this.samplesForReverb)for(let t=0;t<this.samplesForReverb.length;t++)this.samplesForReverb[t]=0;if(null!=this.samplesForChorus)for(let t=0;t<this.samplesForChorus.length;t++)this.samplesForChorus[t]=0;if(null!=this.samplesForChorusReverb)for(let t=0;t<this.samplesForChorusReverb.length;t++)this.samplesForChorusReverb[t]=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){const t=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-t}}nextBar(){if(!this.song)return;const t=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-t}prevBar(){if(!this.song)return;const t=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-t}synthesize(e,s,i,n=!0){if(null==this.song){for(let t=0;t<i;t++)e[t]=0,s[t]=0;return void this.deactivateAudio()}const o=this.song.getChannelCount();for(let e=this.activeTones.length;e<o;e++)this.activeTones[e]=new t.Deque,this.releasedTones[e]=new t.Deque;this.activeTones.length=o,this.releasedTones.length=o;const h=this.getSamplesPerTick();let r=0,a=!1;(0==this.tickSampleCountdown||this.tickSampleCountdown>h)&&(this.tickSampleCountdown=h),n&&(this.beat>=this.song.beatsPerBar&&(this.bar++,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=h,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--)),this.bar>=this.song.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(a=!0,this.pause())));const l=4*i;null!=this.samplesForNone&&this.samplesForNone.length==l&&null!=this.samplesForReverb&&this.samplesForReverb.length==l&&null!=this.samplesForChorus&&this.samplesForChorus.length==l&&null!=this.samplesForChorusReverb&&this.samplesForChorusReverb.length==l||(this.samplesForNone=new Float32Array(l),this.samplesForReverb=new Float32Array(l),this.samplesForChorus=new Float32Array(l),this.samplesForChorusReverb=new Float32Array(l),this.stereoBufferIndex=0);let c=this.stereoBufferIndex;const f=this.samplesForNone,u=this.samplesForReverb,p=this.samplesForChorus,d=this.samplesForChorusReverb,m=+this.volume,y=this.chorusDelayLine,g=this.reverbDelayLine,b=2*Math.PI/(2*this.samplesPerSecond),v=150*this.samplesPerSecond/44100,w=2048-1.51*v,M=2048-2.1*v,k=2048-3.35*v,x=2048-1.47*v,S=2048-2.15*v,C=2048-3.25*v;let P=this.chorusPhase%(2*Math.PI),B=2047&this.chorusDelayPos,E=16383&this.reverbDelayPos,T=+this.reverbFeedback0,F=+this.reverbFeedback1,D=+this.reverbFeedback2,O=+this.reverbFeedback3;const A=.425*Math.pow(this.song.reverb/t.Config.reverbRange,.667),I=1-Math.pow(.5,4/this.samplesPerSecond),L=1-Math.pow(.5,4e3/this.samplesPerSecond);let z=+this.limit;for(;r<i&&!a;){const o=i-r,N=this.tickSampleCountdown<=o?this.tickSampleCountdown:o;for(let e=0;e<this.song.getChannelCount();e++){if(e==this.liveInputChannel){this.determineLiveInputTones(this.song);for(let t=0;t<this.liveInputTones.count();t++){const s=this.liveInputTones.get(t);this.playTone(this.song,c,l,e,h,N,s,!1,!1)}}this.determineCurrentActiveTones(this.song,e,n);for(let t=0;t<this.activeTones[e].count();t++){const s=this.activeTones[e].get(t);this.playTone(this.song,c,l,e,h,N,s,!1,!1)}for(let s=0;s<this.releasedTones[e].count();s++){const i=this.releasedTones[e].get(s);if(i.ticksSinceReleased>=i.instrument.getTransition().releaseTicks){this.freeReleasedTone(e,s),s--;continue}const n=s+this.activeTones[e].count()>=t.Config.maximumTonesPerChannel;this.playTone(this.song,c,l,e,h,N,i,!0,n)}}let R=B+w-v*Math.sin(P+0),$=B+M-v*Math.sin(P+2.1),U=B+k-v*Math.sin(P+4.2),W=B+1024+x-v*Math.sin(P+3.2),j=B+1024+S-v*Math.sin(P+5.3),K=B+1024+C-v*Math.sin(P+1);P+=b*N;const V=(B+N+w-v*Math.sin(P+0)-R)/N,G=(B+N+M-v*Math.sin(P+2.1)-$)/N,Q=(B+N+k-v*Math.sin(P+4.2)-U)/N,q=(B+N+1024+x-v*Math.sin(P+3.2)-W)/N,J=(B+N+1024+S-v*Math.sin(P+5.3)-j)/N,_=(B+N+1024+C-v*Math.sin(P+1)-K)/N,H=r+N;for(let t=r;t<H;t++){const i=c,n=c+1,o=f[i];f[i]=0;const h=f[n];f[n]=0;const r=u[i];u[i]=0;const a=u[n];u[n]=0;const l=p[i];p[i]=0;const b=p[n];p[n]=0;const v=d[i];d[i]=0;const w=d[n];d[n]=0,c+=2;const M=l+v,k=b+w,x=R%1,S=$%1,C=U%1,P=W%1,N=j%1,H=K%1,Z=y[2047&R],X=y[R+1&2047],Y=y[2047&$],tt=y[$+1&2047],et=y[2047&U],st=y[U+1&2047],it=y[2047&W],nt=y[W+1&2047],ot=y[2047&j],ht=y[j+1&2047],rt=y[2047&K],at=.5*(M-(Z+(X-Z)*x)+(Y+(tt-Y)*S)-(et+(st-et)*C)),lt=.5*(k-(it+(nt-it)*P)+(ot+(ht-ot)*N)-(rt+(y[K+1&2047]-rt)*H));y[B]=M,y[B+1024&2047]=k,B=B+1&2047,R+=V,$+=G,U+=Q,W+=q,j+=J,K+=_;const ct=E+3041&16383,ft=E+6426&16383,ut=E+10907&16383,pt=g[E],dt=g[ct],mt=g[ft],yt=g[ut],gt=-(pt+v+r)+dt,bt=-(pt+w+a)-dt,vt=-mt+yt,wt=-mt-yt;T+=.5*((gt+vt)*A-T),F+=.5*((bt+wt)*A-F),D+=.5*((gt-vt)*A-D),O+=.5*((bt-wt)*A-O),g[ct]=T,g[ft]=F,g[ut]=D,g[E]=O,E=E+1&16383;const Mt=o+at+r+dt+mt+yt,kt=h+lt+a+pt+mt-yt,xt=Mt<0?-Mt:Mt,St=kt<0?-kt:kt,Ct=xt>St?xt:St,Pt=m/((z+=(Ct-z)*(z<Ct?L:I))>=1?1.05*z:.8*z+.25);e[t]=Mt*Pt,s[t]=kt*Pt}if(r+=N,this.tickSampleCountdown-=N,this.tickSampleCountdown<=0){for(let e=0;e<this.song.getChannelCount();e++)for(let s=0;s<this.releasedTones[e].count();s++){this.releasedTones[e].get(s).ticksSinceReleased++,s+this.activeTones[e].count()>=t.Config.maximumTonesPerChannel&&(this.freeReleasedTone(e,s),s--)}if(this.tick++,this.tickSampleCountdown=h,this.tick==t.Config.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--;for(let e=0;e<this.song.getChannelCount();e++)for(let s=0;s<this.activeTones[e].count();s++){const i=this.activeTones[e].get(s),n=i.instrument.getTransition();n.isSeamless||null==i.note||i.note.end!=this.part+this.beat*t.Config.partsPerBeat||(n.releases?this.releaseTone(e,i):this.freeTone(i),this.activeTones[e].remove(s),s--)}this.part==t.Config.partsPerBeat&&(this.part=0,n&&(this.beat++,this.beat==this.song.beatsPerBar&&(this.beat=0,this.bar++,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=this.song.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(a=!0,this.resetEffects(),this.pause())))))}}}-1e-24<T&&T<1e-24&&(T=0),-1e-24<F&&F<1e-24&&(F=0),-1e-24<D&&D<1e-24&&(D=0),-1e-24<O&&O<1e-24&&(O=0),-1e-24<z&&z<1e-24&&(z=0),this.stereoBufferIndex=(this.stereoBufferIndex+2*i)%l,this.chorusPhase=P,this.chorusDelayPos=B,this.reverbDelayPos=E,this.reverbFeedback0=T,this.reverbFeedback1=F,this.reverbFeedback2=D,this.reverbFeedback3=O,this.limit=z,n&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/h)/2+this.part)/t.Config.partsPerBeat+this.beat)/this.song.beatsPerBar+this.bar)}freeTone(t){this.tonePool.pushBack(t)}newTone(){if(this.tonePool.count()>0){const t=this.tonePool.popBack();return t.reset(),t.active=!1,t}return new y}releaseTone(t,e){this.releasedTones[t].pushFront(e)}freeReleasedTone(t,e){this.freeTone(this.releasedTones[t].get(e)),this.releasedTones[t].remove(e)}freeAllTones(){for(;this.liveInputTones.count()>0;)this.freeTone(this.liveInputTones.popBack());for(let t=0;t<this.activeTones.length;t++)for(;this.activeTones[t].count()>0;)this.freeTone(this.activeTones[t].popBack());for(let t=0;t<this.releasedTones.length;t++)for(;this.releasedTones[t].count()>0;)this.freeTone(this.releasedTones[t].popBack())}determineLiveInputTones(t){const e=this.liveInputTones,s=this.liveInputPitches;let i=0;if(this.liveInputDuration>0){const n=t.channels[this.liveInputChannel].instruments[t.getPatternInstrument(this.liveInputChannel,this.bar)];if(n.getChord().arpeggiates){let t;0==e.count()?(t=this.newTone(),e.pushBack(t)):!n.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(this.liveInputChannel,e.popFront()),t=this.newTone(),e.pushBack(t)):t=e.get(0),i=1;for(let e=0;e<s.length;e++)t.pitches[e]=s[e];t.pitchCount=s.length,t.chordSize=1,t.instrument=n,t.note=t.prevNote=t.nextNote=null}else for(let t=0;t<s.length;t++){let o;e.count()<=t?(o=this.newTone(),e.pushBack(o)):!n.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(this.liveInputChannel,e.get(t)),o=this.newTone(),e.set(t,o)):o=e.get(t),i++,o.pitches[0]=s[t],o.pitchCount=1,o.chordSize=s.length,o.instrument=n,o.note=o.prevNote=o.nextNote=null}}for(;e.count()>i;)this.releaseTone(this.liveInputChannel,e.popBack());this.liveInputStarted=!1}determineCurrentActiveTones(e,s,i){const n=e.channels[s].instruments[e.getPatternInstrument(s,this.bar)],o=e.getPattern(s,this.bar),h=this.part+this.beat*t.Config.partsPerBeat;let r=null,a=null,l=null;if(i&&null!=o&&!e.channels[s].muted)for(let t=0;t<o.notes.length;t++)if(o.notes[t].end<=h)a=o.notes[t];else if(o.notes[t].start<=h&&o.notes[t].end>h)r=o.notes[t];else if(o.notes[t].start>h){l=o.notes[t];break}const c=this.activeTones[s];if(null!=r)null!=a&&a.end!=r.start&&(a=null),null!=l&&l.start!=r.end&&(l=null),this.syncTones(s,c,n,r.pitches,r,a,l,h);else for(;c.count()>0;)c.peakBack().instrument.getTransition().releases?this.releaseTone(s,c.popBack()):this.freeTone(c.popBack())}syncTones(e,s,i,n,o,h,r,a){let l=0;if(i.getChord().arpeggiates){let t;0==s.count()?(t=this.newTone(),s.pushBack(t)):t=s.get(0),l=1;for(let e=0;e<n.length;e++)t.pitches[e]=n[e];t.pitchCount=n.length,t.chordSize=1,t.instrument=i,t.note=o,t.noteStart=o.start,t.noteEnd=o.end,t.prevNote=h,t.nextNote=r,t.prevNotePitchIndex=0,t.nextNotePitchIndex=0}else{const e=i.getTransition();for(let c=0;c<n.length;c++){const n=c*i.getChord().strumParts;let f=h&&h.pitches.length>c?h:null,u=o,p=r&&r.pitches.length>c?r:null,d=u.start+n;if(d>a){if(!(s.count()>c&&e.isSeamless&&null!=f))break;p=u,u=f,f=null,d=u.start+n}let m,y=u.end;e.isSeamless&&null!=p&&(y=Math.min(t.Config.partsPerBeat*this.song.beatsPerBar,y+n)),s.count()<=c?(m=this.newTone(),s.pushBack(m)):m=s.get(c),l++,m.pitches[0]=u.pitches[c],m.pitchCount=1,m.chordSize=u.pitches.length,m.instrument=i,m.note=u,m.noteStart=d,m.noteEnd=y,m.prevNote=f,m.nextNote=p,m.prevNotePitchIndex=c,m.nextNotePitchIndex=c}}for(;s.count()>l;)s.peakBack().instrument.getTransition().releases?this.releaseTone(e,s.popBack()):this.freeTone(s.popBack())}playTone(t,e,s,i,n,o,h,r,a){let l;switch(g.computeTone(this,t,i,n,o,h,r,a),h.instrument.effects){case 0:l=this.samplesForNone;break;case 1:l=this.samplesForReverb;break;case 2:l=this.samplesForChorus;break;case 3:l=this.samplesForChorusReverb;break;default:throw new Error}g.getInstrumentSynthFunction(h.instrument)(this,l,e,s,2*o,h,h.instrument)}static computeEnvelope(t,e,s,i){switch(t.type){case 0:return i;case 1:return 1;case 4:return 1/(1+e*t.speed);case 5:return 1-1/(1+e*t.speed);case 6:return.5-.5*Math.cos(2*s*Math.PI*t.speed);case 7:return.75-.25*Math.cos(2*s*Math.PI*t.speed);case 2:return Math.max(1,2-10*e);case 3:const n=t.speed,o=.25/Math.sqrt(n);return e<o?e/o:1/(1+(e-o)*n);case 8:return Math.pow(2,-t.speed*e);default:throw new Error("Unrecognized operator envelope type.")}}static computeChordVolume(t){return 1/(.25*(t-1)+1)}static computeTone(e,s,i,n,o,h,r,a){const l=h.instrument,c=l.getTransition(),f=l.getChord(),u=f.arpeggiates?1:g.computeChordVolume(h.chordSize),d=s.getChannelIsNoise(i),m=d?t.Config.noiseInterval:1,y=t.Config.ticksPerPart*n/e.samplesPerSecond,b=1/t.Config.partsPerBeat,v=h.active,w=e.tickSampleCountdown,M=1-w/n,k=1-(w-o)/n,x=(e.beat*t.Config.partsPerBeat+e.part)*t.Config.ticksPerPart+e.tick,S=x/t.Config.ticksPerPart,C=(x+1)/t.Config.ticksPerPart,P=S+(C-S)*M,B=S+(C-S)*k;h.phaseDeltaScale=0,h.filter=1,h.filterScale=1,h.vibratoScale=0,h.intervalMult=1,h.intervalVolumeMult=1,h.active=!1;const E=(l.pan-t.Config.panCenter)/t.Config.panCenter,T=65e-5*e.samplesPerSecond,F=2*Math.round(-E*T),D=1.414*Math.cos((1+E)*Math.PI*.25),O=1.414*Math.cos((1-E)*Math.PI*.25),A=Math.max(0,-F),I=Math.max(0,F);F>=0?(h.stereoVolume1=D,h.stereoVolume2=O,h.stereoOffset=0,h.stereoDelay=I+1):(h.stereoVolume1=O,h.stereoVolume2=D,h.stereoOffset=1,h.stereoDelay=A-1);let L,z,N,R,$=!0,U=0,W=0,j=0,K=1,V=1,G=u,Q=u,q=0,J=0,_=0,H=0;if(3==l.type)d?(z=t.Config.spectrumBasePitch,N=.6):(z=t.Config.keys[s.key].basePitch,N=.3),L=t.Config.spectrumBasePitch,R=28;else if(4==l.type)N=.45,L=z=t.Config.spectrumBasePitch,R=48;else if(2==l.type)N=.19,L=z=t.Config.chipNoises[l.chipNoise].basePitch,R=t.Config.chipNoises[l.chipNoise].isSoft?24:60;else if(1==l.type)z=t.Config.keys[s.key].basePitch,N=.03,L=16,R=48;else if(0==l.type)z=t.Config.keys[s.key].basePitch,N=.03375,L=16,R=48;else if(5==l.type)z=t.Config.keys[s.key].basePitch,N=.025,L=16,R=48;else{if(6!=l.type)throw new Error("Unknown instrument type in computeTone.");z=t.Config.keys[s.key].basePitch,N=.04725,L=16,R=48}for(let e=0;e<t.Config.operatorCount;e++)h.phaseDeltas[e]=0,h.volumeStarts[e]=0,h.volumeDeltas[e]=0;if(r){const e=h.noteLengthTicks+h.ticksSinceReleased,s=h.ticksSinceReleased+M,i=h.ticksSinceReleased+k,n=h.noteLengthTicks+s,o=h.noteLengthTicks+i,r=h.instrument.getTransition();$=!1,U=Math.floor(e/t.Config.ticksPerPart),W=j=h.lastInterval,q=J=g.expressionToVolumeMult(h.lastVolume),K=g.expressionToVolumeMult(3*(1-s/r.releaseTicks)),V=g.expressionToVolumeMult(3*(1-i/r.releaseTicks)),_=n/t.Config.ticksPerPart,H=o/t.Config.ticksPerPart,a&&(K*=1-M,V*=1-k)}else if(null==h.note){K=V=1,q=J=1,h.lastInterval=0,h.lastVolume=3,h.ticksSinceReleased=0,$=!1;const e=h.liveInputSamplesHeld/n;h.liveInputSamplesHeld+=o;const s=h.liveInputSamplesHeld/n;h.noteLengthTicks=s;const i=e/t.Config.ticksPerPart,r=s/t.Config.ticksPerPart;U=Math.floor(i),_=i,H=r}else{const i=h.note,n=h.prevNote,o=h.nextNote,r=e.part+e.beat*t.Config.partsPerBeat,a=t.Config.partsPerBeat*s.beatsPerBar,l=h.noteStart,p=h.noteEnd;let d;for(U=r-l,d=1;d<i.pins.length-1&&!(i.pins[d].time+i.start>r);d++);const m=i.pins[d-1],y=i.pins[d],b=l*t.Config.ticksPerPart,w=p*t.Config.ticksPerPart-b,x=(i.start+m.time)*t.Config.ticksPerPart,P=(i.start+y.time)*t.Config.ticksPerPart;h.lastInterval=i.pins[i.pins.length-1].interval,h.lastVolume=i.pins[i.pins.length-1].volume,h.ticksSinceReleased=0,h.noteLengthTicks=w;const B=r*t.Config.ticksPerPart+e.tick,E=r*t.Config.ticksPerPart+e.tick+1,T=B-b,F=E-b,D=Math.min(1,(B-x)/(P-x)),O=Math.min(1,(E-x)/(P-x));let A=m.volume+(y.volume-m.volume)*D,I=m.volume+(y.volume-m.volume)*O,L=1,z=1,N=u,R=u,Z=m.interval+(y.interval-m.interval)*D,X=m.interval+(y.interval-m.interval)*O,Y=S-l,tt=C-l;$=B+M-b==0||!v;const et=.5*w;if(c.isSeamless&&!c.slides&&0==i.start)$=!v;else if(c.isSeamless&&null!=n&&($=!v,c.slides)){const t=Math.min(et,c.slideTicks),e=Math.max(0,1-T/t),s=Math.max(0,1-F/t),o=.5*(n.pitches[h.prevNotePitchIndex]+n.pins[n.pins.length-1].interval-h.pitches[0]),r=.5*(n.pins[n.pins.length-1].volume-i.pins[0].volume),a=.5*(n.end-n.start);if(Z+=e*o,X+=s*o,A+=e*r,I+=s*r,Y+=e*a,tt+=s*a,!f.arpeggiates){const t=.5*(n.pitches.length-h.chordSize);N=g.computeChordVolume(h.chordSize+e*t),R=g.computeChordVolume(h.chordSize+s*t)}}if(c.isSeamless&&!c.slides&&i.end==a);else if(c.isSeamless&&null!=o){if(c.slides){const t=Math.min(et,c.slideTicks),e=Math.max(0,1-(w-T)/t),s=Math.max(0,1-(w-F)/t),n=.5*(o.pitches[h.nextNotePitchIndex]-(h.pitches[0]+i.pins[i.pins.length-1].interval)),r=.5*(o.pins[0].volume-i.pins[i.pins.length-1].volume),a=.5*-(p-l);if(Z+=e*n,X+=s*n,A+=e*r,I+=s*r,Y+=e*a,tt+=s*a,!f.arpeggiates){const t=.5*(o.pitches.length-h.chordSize);N=g.computeChordVolume(h.chordSize+e*t),R=g.computeChordVolume(h.chordSize+s*t)}}}else if(!c.releases){const t=c.releaseTicks;t>0&&(L*=Math.min(1,(w-T)/t),z*=Math.min(1,(w-F)/t))}W=Z+(X-Z)*M,j=Z+(X-Z)*k,q=g.expressionToVolumeMult(A+(I-A)*M),J=g.expressionToVolumeMult(A+(I-A)*k),K=L+(z-L)*M,V=L+(z-L)*k,G=N+(R-N)*M,Q=N+(R-N)*k,_=Y+(tt-Y)*M,H=Y+(tt-Y)*k}const Z=1/e.samplesPerSecond;if(h.active=!0,0==l.type||1==l.type||5==l.type||6==l.type){const e=g.getLFOAmplitude(l,y*P),s=g.getLFOAmplitude(l,y*B),i=U<t.Config.vibratos[l.vibrato].delayParts?0:t.Config.vibratos[l.vibrato].amplitude;W+=i*e,j+=i*s}if(!c.isSeamless||(c.slides||null==h.note||0!=h.note.start)&&null==h.prevNote){const t=c.attackSeconds;t>0&&(K*=Math.min(1,y*_/t),V*=Math.min(1,y*H/t))}const X=g.instrumentVolumeToVolumeMult(l.volume);4==l.type&&(h.drumsetPitch=h.pitches[0],null!=h.note&&(h.drumsetPitch+=h.note.pickMainInterval()),h.drumsetPitch=Math.max(0,Math.min(t.Config.drumCount-1,h.drumsetPitch)));const Y=l.getFilterCutoffOctaves(),tt=4==l.type?l.getDrumsetEnvelope(h.drumsetPitch):l.getFilterEnvelope(),et=t.Config.filterCutoffMaxHz*Math.pow(2,Y),st=2*Math.sin(Math.PI*et/e.samplesPerSecond),it=2*Math.sin(Math.PI*t.Config.filterCutoffMinHz/e.samplesPerSecond);h.filter=st*g.computeEnvelope(tt,y*_,b*P,q);let nt=st*g.computeEnvelope(tt,y*H,b*B,J);h.filter=Math.min(t.Config.filterMax,Math.max(it,h.filter)),nt=Math.min(t.Config.filterMax,Math.max(it,nt)),h.filterScale=Math.pow(nt/h.filter,1/o);let ot=Math.pow(.5,.35*Y);if(l.filterResonance>0&&(ot=Math.pow(ot,1.7)*Math.pow(.5,.125*(l.filterResonance-1))),8==tt.type?ot*=1.25+.025*tt.speed:4==tt.type&&(ot*=1+.02*tt.speed),$&&h.reset(),1==l.type){let i=1,n=0,r=0;if(h.pitchCount>1&&!f.harmonizes){const i=Math.floor((e.tick+e.part*t.Config.ticksPerPart)/t.Config.rhythms[s.rhythm].ticksPerArpeggio);r=h.pitches[t.getArpeggioPitchIndex(h.pitchCount,s.rhythm,i)]-h.pitches[0]}const a=t.Config.algorithms[l.algorithm].carrierCount;for(let e=0;e<t.Config.operatorCount;e++){const s=t.Config.algorithms[l.algorithm].associatedCarrier[e]-1,c=h.pitches[f.harmonizes?e<h.pitchCount?e:s<h.pitchCount?s:0:0],u=t.Config.operatorFrequencies[l.operators[e].frequency].mult,d=t.Config.operatorCarrierInterval[s]+r,v=z+(c+W)*m+d,w=u*p.frequencyFromPitch(v)+t.Config.operatorFrequencies[l.operators[e].frequency].hzOffset;h.phaseDeltas[e]=w*Z*t.Config.sineWaveLength;const M=g.operatorAmplitudeCurve(l.operators[e].amplitude),k=M*t.Config.operatorFrequencies[l.operators[e].frequency].amplitudeSign;let x=k,S=k;if(e<a){const t=z+(c+j)*m+d,e=Math.pow(2,-(v-L)/R),s=Math.pow(2,-(t-L)/R);x*=e,S*=s,n+=M}else x*=1.5*t.Config.sineWaveLength,S*=1.5*t.Config.sineWaveLength,i*=1-Math.min(1,l.operators[e].amplitude/15);const C=t.Config.envelopes[l.operators[e].envelope];x*=g.computeEnvelope(C,y*_,b*P,q),S*=g.computeEnvelope(C,y*H,b*B,J),h.volumeStarts[e]=x,h.volumeDeltas[e]=(S-x)/o}const c=.3*t.Config.sineWaveLength*l.feedbackAmplitude/15,u=t.Config.envelopes[l.feedbackEnvelope];let d=c*g.computeEnvelope(u,y*_,b*P,q),v=c*g.computeEnvelope(u,y*H,b*B,J);h.feedbackMult=d,h.feedbackDelta=(v-h.feedbackMult)/o;const w=N*X;h.volumeStart=ot*w*K*G;const M=ot*w*V*Q;h.volumeDelta=(M-h.volumeStart)/o,i*=(Math.pow(2,2-1.4*l.feedbackAmplitude/15)-1)/3,i*=1-Math.min(1,Math.max(0,n-1)/2),h.volumeStart*=1+3*i,h.volumeDelta*=1+3*i}else{let i=h.pitches[0];if(h.pitchCount>1){const n=Math.floor((e.tick+e.part*t.Config.ticksPerPart)/t.Config.rhythms[s.rhythm].ticksPerArpeggio);if(f.harmonizes){const e=h.pitches[1+t.getArpeggioPitchIndex(h.pitchCount-1,s.rhythm,n)]-h.pitches[0];h.intervalMult=Math.pow(2,e/12),h.intervalVolumeMult=Math.pow(2,-e/R)}else i=h.pitches[t.getArpeggioPitchIndex(h.pitchCount,s.rhythm,n)]}const n=z+(i+W)*m,r=z+(i+j)*m,a=p.frequencyFromPitch(n),c=Math.pow(2,-(n-L)/R),u=Math.pow(2,-(r-L)/R);let d=N*ot;if(2==l.type&&(d*=t.Config.chipNoises[l.chipNoise].volume),0==l.type&&(d*=t.Config.chipWaves[l.chipWave].volume),0!=l.type&&5!=l.type||(d*=t.Config.intervals[l.interval].volume),6==l.type){const e=t.Config.envelopes[l.pulseEnvelope],s=.5*Math.pow(.5,.5*(t.Config.pulseWidthRange-l.pulseWidth-1)),i=s*g.computeEnvelope(e,y*_,b*P,q),n=s*g.computeEnvelope(e,y*H,b*B,J);h.pulseWidth=i,h.pulseWidthDelta=(n-i)/o}h.phaseDeltas[0]=a*Z,h.volumeStart=K*G*c*d*X;let v=V*Q*u*d*X;0==tt.type||6==l.type&&0==t.Config.envelopes[l.pulseEnvelope].type||(h.volumeStart*=q,v*=J),h.volumeDelta=(v-h.volumeStart)/o}h.phaseDeltaScale=Math.pow(2,(j-W)*m/12/o)}static getLFOAmplitude(e,s){let i=0;for(const n of t.Config.vibratos[e.vibrato].periodsSeconds)i+=Math.sin(2*Math.PI*s/n);return i}static getInstrumentSynthFunction(e){if(1==e.type){const s=e.algorithm+"_"+e.feedbackType;if(void 0==g.fmSynthFunctionCache[s]){const i=[];for(const s of g.fmSourceTemplate)if(-1!=s.indexOf("// CARRIER OUTPUTS")){const n=[];for(let s=0;s<t.Config.algorithms[e.algorithm].carrierCount;s++)n.push("operator"+s+"Scaled");i.push(s.replace("/*operator#Scaled*/",n.join(" + ")))}else if(-1!=s.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let s=t.Config.operatorCount-1;s>=0;s--)for(const n of g.operatorSourceTemplate)if(-1!=n.indexOf("/* + operator@Scaled*/")){let o="";for(const i of t.Config.algorithms[e.algorithm].modulatedBy[s])o+=" + operator"+(i-1)+"Scaled";const h=t.Config.feedbacks[e.feedbackType].indices[s];if(h.length>0){o+=" + feedbackMult * (";const t=[];for(const e of h)t.push("operator"+(e-1)+"Output");o+=t.join(" + ")+")"}i.push(n.replace(/\#/g,s+"").replace("/* + operator@Scaled*/",o))}else i.push(n.replace(/\#/g,s+""));else if(-1!=s.indexOf("#"))for(let e=0;e<t.Config.operatorCount;e++)i.push(s.replace(/\#/g,e+""));else i.push(s);g.fmSynthFunctionCache[s]=new Function("synth","data","stereoBufferIndex","stereoBufferLength","runLength","tone","instrument",i.join("\n"))}return g.fmSynthFunctionCache[s]}if(0==e.type)return g.chipSynth;if(5==e.type)return g.harmonicsSynth;if(6==e.type)return g.pulseWidthSynth;if(2==e.type)return g.noiseSynth;if(3==e.type)return g.spectrumSynth;if(4==e.type)return g.drumsetSynth;throw new Error("Unrecognized instrument type: "+e.type)}static chipSynth(e,s,i,n,o,h,r){const a=t.Config.chipWaves[r.chipWave].samples,l=+a.length-1,c=+Math.pow(2,(t.Config.intervals[r.interval].offset+t.Config.intervals[r.interval].spread)/12),f=Math.pow(2,(t.Config.intervals[r.interval].offset-t.Config.intervals[r.interval].spread)/12)*h.intervalMult,u=h.intervalVolumeMult*t.Config.intervals[r.interval].sign;0!=r.interval||r.getChord().customInterval||(h.phases[1]=h.phases[0]);const p=f/c;let d=h.phaseDeltas[0]*c*l,m=d*p;const y=+h.phaseDeltaScale;let g=+h.volumeStart;const b=+h.volumeDelta;let v=h.phases[0]%1*l,w=h.phases[1]%1*l,M=+h.filter,k=r.getFilterIsFirstOrder()?1:M;const x=+h.filterScale,S=r.getFilterIsFirstOrder()?1:x,C=t.Config.filterMaxResonance*Math.pow(Math.max(0,r.getFilterResonance()-1)/(t.Config.filterResonanceRange-2),.5);let P=+h.filterSample0,B=+h.filterSample1;const E=0|v,T=0|w,F=E%l,D=T%l,O=v-E,A=w-T;let I=a[F],L=a[D];I+=(a[F+1]-I)*O,L+=(a[D+1]-L)*A;const z=i+o;i+=h.stereoOffset;const N=h.stereoVolume1,R=h.stereoVolume2,$=h.stereoDelay;for(;i<z;){const t=0|(v+=d),e=0|(w+=m),o=t%l,h=e%l;let r=a[o],c=a[h];const f=v-t,p=w-e;let E=((r+=(a[o+1]-r)*f)-I)/d,T=((c+=(a[h+1]-c)*p)-L)/m;I=r,L=c,B+=k*((P+=M*(E+T*u-P+(C+C/(1-M))*(P-B)))-B),M*=x,k*=S,d*=y,m*=y;const F=B*g;g+=b,s[i]+=F*N,s[(i+$)%n]+=F*R,i+=2}h.phases[0]=v/l,h.phases[1]=w/l;-1e-24<P&&P<1e-24&&(P=0),-1e-24<B&&B<1e-24&&(B=0),h.filterSample0=P,h.filterSample1=B}static harmonicsSynth(e,s,i,n,o,h,r){const a=r.harmonicsWave.getCustomWave(),l=+a.length-1,c=+Math.pow(2,(t.Config.intervals[r.interval].offset+t.Config.intervals[r.interval].spread)/12),f=Math.pow(2,(t.Config.intervals[r.interval].offset-t.Config.intervals[r.interval].spread)/12)*h.intervalMult,u=h.intervalVolumeMult*t.Config.intervals[r.interval].sign;0!=r.interval||r.getChord().customInterval||(h.phases[1]=h.phases[0]);const p=f/c;let d=h.phaseDeltas[0]*c*l,m=d*p;const y=+h.phaseDeltaScale;let g=+h.volumeStart;const b=+h.volumeDelta;let v=h.phases[0]%1*l,w=h.phases[1]%1*l,M=+h.filter,k=r.getFilterIsFirstOrder()?1:M;const x=+h.filterScale,S=r.getFilterIsFirstOrder()?1:x,C=t.Config.filterMaxResonance*Math.pow(Math.max(0,r.getFilterResonance()-1)/(t.Config.filterResonanceRange-2),.5);let P=+h.filterSample0,B=+h.filterSample1;const E=0|v,T=0|w,F=E%l,D=T%l,O=v-E,A=w-T;let I=a[F],L=a[D];I+=(a[F+1]-I)*O,L+=(a[D+1]-L)*A;const z=i+o;i+=h.stereoOffset;const N=h.stereoVolume1,R=h.stereoVolume2,$=h.stereoDelay;for(;i<z;){const t=0|(v+=d),e=0|(w+=m),o=t%l,h=e%l;let r=a[o],c=a[h];const f=v-t,p=w-e;let E=((r+=(a[o+1]-r)*f)-I)/d,T=((c+=(a[h+1]-c)*p)-L)/m;I=r,L=c,B+=k*((P+=M*(E+T*u-P+(C+C/(1-M))*(P-B)))-B),M*=x,k*=S,d*=y,m*=y;const F=B*g;g+=b,s[i]+=F*N,s[(i+$)%n]+=F*R,i+=2}h.phases[0]=v/l,h.phases[1]=w/l;-1e-24<P&&P<1e-24&&(P=0),-1e-24<B&&B<1e-24&&(B=0),h.filterSample0=P,h.filterSample1=B}static pulseWidthSynth(e,s,i,n,o,h,r){let a=h.phaseDeltas[0];const l=+h.phaseDeltaScale;let c=+h.volumeStart;const f=+h.volumeDelta;let u=h.phases[0]%1,p=h.pulseWidth;const d=h.pulseWidthDelta;let m=+h.filter,y=r.getFilterIsFirstOrder()?1:m;const g=+h.filterScale,b=r.getFilterIsFirstOrder()?1:g,v=t.Config.filterMaxResonance*Math.pow(Math.max(0,r.getFilterResonance()-1)/(t.Config.filterResonanceRange-2),.5);let w=+h.filterSample0,M=+h.filterSample1;const k=i+o;i+=h.stereoOffset;const x=h.stereoVolume1,S=h.stereoVolume2,C=h.stereoDelay;for(;i<k;){const t=u%1,e=(u+p)%1;let o=e-t;if(t<a)o+=.5*((P=t/a)+P-P*P-1);else if(t>1-a){o+=.5*((P=(t-1)/a)+P+P*P+1)}if(e<a)o-=.5*((P=e/a)+P-P*P-1);else if(e>1-a){var P;o-=.5*((P=(e-1)/a)+P+P*P+1)}M+=y*((w+=m*(o-w+(v+v/(1-m))*(w-M)))-M),m*=g,y*=b,u+=a,a*=l,p+=d;const h=M*c;c+=f,s[i]+=h*x,s[(i+C)%n]+=h*S,i+=2}h.phases[0]=u;-1e-24<w&&w<1e-24&&(w=0),-1e-24<M&&M<1e-24&&(M=0),h.filterSample0=w,h.filterSample1=M}static noiseSynth(e,s,i,n,o,h,r){let a=r.getDrumWave(),l=+h.phaseDeltas[0];const c=+h.phaseDeltaScale;let f=+h.volumeStart;const u=+h.volumeDelta;let p=h.phases[0]%1*t.Config.chipNoiseLength;0==h.phases[0]&&(p=Math.random()*t.Config.chipNoiseLength);let d=+h.sample,m=+h.filter,y=r.getFilterIsFirstOrder()?1:m;const g=+h.filterScale,b=r.getFilterIsFirstOrder()?1:g,v=t.Config.filterMaxResonance*Math.pow(Math.max(0,r.getFilterResonance()-1)/(t.Config.filterResonanceRange-2),.5);let w=+h.filterSample0,M=+h.filterSample1;const k=Math.min(1,h.phaseDeltas[0]*t.Config.chipNoises[r.chipNoise].pitchFilterMult),x=i+o;i+=h.stereoOffset;const S=h.stereoVolume1,C=h.stereoVolume2,P=h.stereoDelay;for(;i<x;){M+=y*((w+=m*((d+=(a[32767&p]-d)*k)-w+(v+v/(1-m))*(w-M)))-M),p+=l,m*=g,y*=b,l*=c;const t=M*f;f+=u,s[i]+=t*S,s[(i+P)%n]+=t*C,i+=2}h.phases[0]=p/t.Config.chipNoiseLength,h.sample=d;-1e-24<w&&w<1e-24&&(w=0),-1e-24<M&&M<1e-24&&(M=0),h.filterSample0=w,h.filterSample1=M}static spectrumSynth(e,s,i,n,o,h,r){let a=r.getDrumWave(),l=128*h.phaseDeltas[0];const c=+h.phaseDeltaScale;let f=+h.volumeStart;const u=+h.volumeDelta;let p=+h.sample,d=+h.filter,m=r.getFilterIsFirstOrder()?1:d;const y=+h.filterScale,b=r.getFilterIsFirstOrder()?1:y,v=t.Config.filterMaxResonance*Math.pow(Math.max(0,r.getFilterResonance()-1)/(t.Config.filterResonanceRange-2),.5);let w=+h.filterSample0,M=+h.filterSample1,k=h.phases[0]%1*t.Config.chipNoiseLength;0==h.phases[0]&&(k=g.findRandomZeroCrossing(a)+l);const x=Math.min(1,l),S=i+o;i+=h.stereoOffset;const C=h.stereoVolume1,P=h.stereoVolume2,B=h.stereoDelay;for(;i<S;){const t=0|k,e=32767&t;let o=a[e];const h=k-t;M+=m*((w+=d*((p+=((o+=(a[e+1]-o)*h)-p)*x)-w+(v+v/(1-d))*(w-M)))-M),k+=l,d*=y,m*=b,l*=c;const r=M*f;f+=u,s[i]+=r*C,s[(i+B)%n]+=r*P,i+=2}h.phases[0]=k/t.Config.chipNoiseLength,h.sample=p;-1e-24<w&&w<1e-24&&(w=0),-1e-24<M&&M<1e-24&&(M=0),h.filterSample0=w,h.filterSample1=M}static drumsetSynth(e,s,i,n,o,h,r){let a=r.getDrumsetWave(h.drumsetPitch),l=h.phaseDeltas[0]/p.drumsetIndexReferenceDelta(h.drumsetPitch);const c=+h.phaseDeltaScale;let f=+h.volumeStart;const u=+h.volumeDelta;let d=+h.sample,m=+h.filter,y=r.getFilterIsFirstOrder()?1:m;const b=+h.filterScale,v=r.getFilterIsFirstOrder()?1:b,w=t.Config.filterMaxResonance*Math.pow(Math.max(0,r.getFilterResonance()-1)/(t.Config.filterResonanceRange-2),.5);let M=+h.filterSample0,k=+h.filterSample1,x=h.phases[0]%1*t.Config.chipNoiseLength;0==h.phases[0]&&(x=g.findRandomZeroCrossing(a)+l);const S=i+o;i+=h.stereoOffset;const C=h.stereoVolume1,P=h.stereoVolume2,B=h.stereoDelay;for(;i<S;){const t=0|x,e=32767&t;d=a[e];const o=x-t;k+=y*((M+=m*((d+=(a[e+1]-d)*o)-M+(w+w/(1-m))*(M-k)))-k),x+=l,m*=b,y*=v,l*=c;const h=k*f;f+=u,s[i]+=h*C,s[(i+B)%n]+=h*P,i+=2}h.phases[0]=x/t.Config.chipNoiseLength,h.sample=d;-1e-24<M&&M<1e-24&&(M=0),-1e-24<k&&k<1e-24&&(k=0),h.filterSample0=M,h.filterSample1=k}static findRandomZeroCrossing(e){let s=Math.random()*t.Config.chipNoiseLength,i=32767&s,n=e[i];for(let o=128;o>0;o--){const o=i+16&32767,h=e[o];if(n*h<=0){for(let o=0;o<16;o++){const o=i+1&32767,h=e[o];if(n*h<=0){const e=h-n;s=i,Math.abs(e)>1e-8&&(s+=-n/e),s=Math.max(0,s)%t.Config.chipNoiseLength;break}i=o,n=h}break}i=o,n=h}return s}static instrumentVolumeToVolumeMult(e){return e==t.Config.volumeRange-1?0:Math.pow(2,t.Config.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?t.Config.volumeRange-1:Math.min(t.Config.volumeRange-2,Math.log(e)/Math.LN2/t.Config.volumeLogScale)}static expressionToVolumeMult(t){return Math.pow(Math.max(0,t)/3,1.5)}static volumeMultToExpression(t){return 3*Math.pow(Math.max(0,t),1/1.5)}getSamplesPerTick(){if(null==this.song)return 0;const e=this.song.getBeatsPerMinute()/60*t.Config.partsPerBeat*t.Config.ticksPerPart;return Math.floor(this.samplesPerSecond/e)}}g.fmSynthFunctionCache={},g.fmSourceTemplate=("\n\t\t\tconst sineWave = beepbox.Config.sineWave;\n\t\t\t\n\t\t\tlet phaseDeltaScale = +tone.phaseDeltaScale;\n\t\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\n\t\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#];\n\t\t\tlet operator#OutputMult  = +tone.volumeStarts[#];\n\t\t\tconst operator#OutputDelta = +tone.volumeDeltas[#];\n\t\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n\t\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\t\tconst feedbackDelta        = +tone.feedbackDelta;\n\t\t\tlet volume = +tone.volumeStart;\n\t\t\tconst volumeDelta = +tone.volumeDelta;\n\t\t\t\n\t\t\tlet filter1 = +tone.filter;\n\t\t\tlet filter2 = instrument.getFilterIsFirstOrder() ? 1.0 : filter1;\n\t\t\tconst filterScale1 = +tone.filterScale;\n\t\t\tconst filterScale2 = instrument.getFilterIsFirstOrder() ? 1.0 : filterScale1;\n\t\t\tconst filterResonance = beepbox.Config.filterMaxResonance * Math.pow(Math.max(0, instrument.getFilterResonance() - 1) / (beepbox.Config.filterResonanceRange - 2), 0.5);\n\t\t\tlet filterSample0 = +tone.filterSample0;\n\t\t\tlet filterSample1 = +tone.filterSample1;\n\t\t\t\n\t\t\tconst stopIndex = stereoBufferIndex + runLength;\n\t\t\tstereoBufferIndex += tone.stereoOffset;\n\t\t\tconst stereoVolume1 = tone.stereoVolume1;\n\t\t\tconst stereoVolume2 = tone.stereoVolume2;\n\t\t\tconst stereoDelay = tone.stereoDelay;\n\t\t\twhile (stereoBufferIndex < stopIndex) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\t\tconst feedback = filterResonance + filterResonance / (1.0 - filter1);\n\t\t\t\tfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\n\t\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\t\toperator#PhaseDelta *= phaseDeltaScale;\n\t\t\t\tfilter1 *= filterScale1;\n\t\t\t\tfilter2 *= filterScale2;\n\t\t\t\t\n\t\t\t\tconst output = filterSample1 * volume;\n\t\t\t\tvolume += volumeDelta;\n\t\t\t\t\n\t\t\t\tdata[stereoBufferIndex] += output * stereoVolume1;\n\t\t\t\tdata[(stereoBufferIndex + stereoDelay) % stereoBufferLength] += output * stereoVolume2;\n\t\t\t\tstereoBufferIndex += 2;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / "+t.Config.sineWaveLength+";\n\t\t\ttone.feedbackOutputs[#] = operator#Output;\n\t\t\t\n\t\t\tconst epsilon = (1.0e-24);\n\t\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\n\t\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\n\t\t\ttone.filterSample0 = filterSample0;\n\t\t\ttone.filterSample1 = filterSample1;\n\t\t").split("\n"),g.operatorSourceTemplate=("\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & "+t.Config.sineWaveMask+";\n\t\t\t\tconst operator#Sample   = sineWave[operator#Index];\n\t\t\t\toperator#Output       = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t").split("\n"),t.Synth=g}(beepbox||(beepbox={})),function(t){const{a:e,button:s,div:i,h1:n,input:o}=t.HTML,{svg:h,circle:r,rect:a,path:l}=t.SVG;document.head.appendChild(t.HTML.style({type:"text/css"},`\n\t\tbody {\n\t\t\tcolor: ${t.ColorConfig.primaryText};\n\t\t\tbackground: ${t.ColorConfig.editorBackground};\n\t\t}\n\t\th1 {\n\t\t\tfont-weight: bold;\n\t\t\tfont-size: 14px;\n\t\t\tline-height: 22px;\n\t\t\ttext-align: initial;\n\t\t\tmargin: 0;\n\t\t}\n\t\ta {\n\t\t\tfont-weight: bold;\n\t\t\tfont-size: 12px;\n\t\t\tline-height: 22px;\n\t\t\twhite-space: nowrap;\n\t\t\tcolor: ${t.ColorConfig.linkAccent};\n\t\t}\n\t\tbutton {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t\tposition: relative;\n\t\t\tborder: none;\n\t\t\tborder-radius: 5px;\n\t\t\tbackground: ${t.ColorConfig.uiWidgetBackground};\n\t\t\tcolor: ${t.ColorConfig.primaryText};\n\t\t\tcursor: pointer;\n\t\t\tfont-size: 14px;\n\t\t\tfont-family: inherit;\n\t\t}\n\t\tbutton:hover, button:focus {\n\t\t\tbackground: ${t.ColorConfig.uiWidgetFocus};\n\t\t}\n\t\t.playButton, .pauseButton {\n\t\t\tpadding-left: 24px;\n\t\t\tpadding-right: 6px;\n\t\t}\n\t\t.playButton::before {\n\t\t\tcontent: "";\n\t\t\tposition: absolute;\n\t\t\tleft: 6px;\n\t\t\ttop: 50%;\n\t\t\tmargin-top: -6px;\n\t\t\twidth: 12px;\n\t\t\theight: 12px;\n\t\t\tpointer-events: none;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\t\t-webkit-mask-repeat: no-repeat;\n\t\t\t-webkit-mask-position: center;\n\t\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\t\tmask-repeat: no-repeat;\n\t\t\tmask-position: center;\n\t\t}\n\t\t.pauseButton::before {\n\t\t\tcontent: "";\n\t\t\tposition: absolute;\n\t\t\tleft: 6px;\n\t\t\ttop: 50%;\n\t\t\tmargin-top: -6px;\n\t\t\twidth: 12px;\n\t\t\theight: 12px;\n\t\t\tpointer-events: none;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\t\t-webkit-mask-repeat: no-repeat;\n\t\t\t-webkit-mask-position: center;\n\t\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\t\tmask-repeat: no-repeat;\n\t\t\tmask-position: center;\n\t\t}\n\t\t\n\t\tinput[type=range] {\n\t\t\t-webkit-appearance: none;\n\t\t\tappearance: none;\n\t\t\theight: 16px;\n\t\t\tmargin: 0;\n\t\t\tcursor: pointer;\n\t\t\tbackground-color: ${t.ColorConfig.editorBackground};\n\t\t\ttouch-action: pan-y;\n\t\t}\n\t\tinput[type=range]:focus {\n\t\t\toutline: none;\n\t\t}\n\t\tinput[type=range]::-webkit-slider-runnable-track {\n\t\t\twidth: 100%;\n\t\t\theight: 4px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: ${t.ColorConfig.uiWidgetBackground};\n\t\t}\n\t\tinput[type=range]::-webkit-slider-thumb {\n\t\t\theight: 16px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\tcursor: pointer;\n\t\t\t-webkit-appearance: none;\n\t\t\tmargin-top: -6px;\n\t\t}\n\t\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\n\t\t\tbackground: ${t.ColorConfig.uiWidgetFocus};\n\t\t}\n\t\tinput[type=range]::-moz-range-track {\n\t\t\twidth: 100%;\n\t\t\theight: 4px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: ${t.ColorConfig.uiWidgetBackground};\n\t\t}\n\t\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\n\t\t\tbackground: ${t.ColorConfig.uiWidgetFocus};\n\t\t}\n\t\tinput[type=range]::-moz-range-thumb {\n\t\t\theight: 16px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tborder: none;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\tcursor: pointer;\n\t\t}\n\t\tinput[type=range]::-ms-track {\n\t\t\twidth: 100%;\n\t\t\theight: 4px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: ${t.ColorConfig.uiWidgetBackground};\n\t\t\tborder-color: transparent;\n\t\t}\n\t\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\n\t\t\tbackground: ${t.ColorConfig.uiWidgetFocus};\n\t\t}\n\t\tinput[type=range]::-ms-thumb {\n\t\t\theight: 16px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tbackground: ${t.ColorConfig.primaryText};\n\t\t\tcursor: pointer;\n\t\t}\n\t`)),t.ColorConfig.setTheme("dark classic");let c,f=null,u=(4294967295*Math.random()>>>0).toString(16),p=!1,d=!1,m=1;const y=new t.Synth;let g=n({style:"flex-grow: 1; margin: 0 1px;"},""),b=e({target:"_top",style:"margin: 0 4px;"},"✎ Edit"),v=e({href:"javascript:void(0)",style:"margin: 0 4px;"},"⎘ Copy URL"),w=e({href:"javascript:void(0)",style:"margin: 0 4px;"},"⤳ Share"),M=e({target:"_top",style:"margin: 0 4px;"},"⇱ Fullscreen"),k=!1;const x=s({style:"width: 100%; height: 100%; max-height: 50px;"}),S=i({style:"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;"},x),C=l({d:"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z"}),P=s({title:"loop",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},h({width:12,height:12,viewBox:"0 0 12 12"},C)),B=h({style:"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;",viewBox:"0 0 12 12"},l({fill:t.ColorConfig.uiWidgetBackground,d:"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z"})),E=o({title:"volume",type:"range",value:75,min:0,max:100,step:1,style:"width: 12vw; max-width: 100px; margin: 0 1px;"}),T=h({width:12,height:12,viewBox:"0 0 12 12"},r({cx:"5",cy:"5",r:"4.5","stroke-width":"1",stroke:"currentColor",fill:"none"}),l({stroke:"currentColor","stroke-width":"2",d:"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5",fill:"none"})),F=s({title:"zoom",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},T),D=h({style:"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;"}),O=i({style:`position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${t.ColorConfig.playhead}; pointer-events: none;`}),A=i({style:"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;"},D,O),I=i({style:"display: flex; flex-grow: 1; flex-shrink: 1; height: 0; position: relative; align-items: center; overflow: hidden;"},A);function L(){let t=location.hash;if(f!=t&&""!=t){f=t,"#"==t.charAt(0)&&(t=t.substring(1)),M.setAttribute("href",location.href);for(const e of t.split("&")){let s=e.indexOf("=");if(-1!=s){let t=e.substring(0,s),i=e.substring(s+1);switch(t){case"song":y.setSong(i),y.snapToStart(),b.setAttribute("href","../#"+i);break;case"loop":y.loopRepeatCount="1"!=i?0:-1,q()}}else y.setSong(t),y.snapToStart(),b.setAttribute("href","../#"+t)}V()}}function z(){y.playing&&(c=requestAnimationFrame(z),localStorage.getItem("playerId")!=u&&N(),K()),p!=y.playing&&Q()}function N(){null!=y.song&&(null!=c&&cancelAnimationFrame(c),c=null,y.playing?y.pause():(y.play(),localStorage.setItem("playerId",u),z())),Q()}function R(t){t.preventDefault(),U(t.clientX||t.pageX)}function $(t){U(t.touches[0].clientX)}function U(t){if(k&&null!=y.song){const e=I.getBoundingClientRect();y.playhead=y.song.barCount*(t-e.left)/(e.right-e.left),K()}}function W(){k=!1}function j(){const t=+E.value;y.volume=Math.min(1,Math.pow(t/50,.5))*Math.pow(2,(t-75)/25)}function K(){if(null!=y.song){let t=y.playhead/y.song.barCount;O.style.left=m*t+"px";const e=I.getBoundingClientRect();I.scrollLeft=t*(m-e.width)}}function V(){if(D.innerHTML="",null==y.song)return;const e=I.getBoundingClientRect();let s,i,n;if(d){const o=((s=e.height)-1)/(n=12*(i=Math.max(t.Config.windowOctaves,Math.min(t.Config.pitchOctaves,Math.round(s/24))))+1),h=Math.max(8,4*o);m=Math.max(e.width,h*y.song.barCount*y.song.beatsPerBar)}else{m=e.width;const o=Math.max(1,m/(y.song.barCount*y.song.beatsPerBar)/3);s=Math.min(e.height,o*(t.Config.maxPitch+1)+1),n=12*(i=Math.max(t.Config.windowOctaves,Math.min(t.Config.pitchOctaves,Math.round(s/(12*o)))))+1}A.style.width=m+"px",A.style.height=s+"px",D.style.width=m+"px",D.style.height=s+"px";const o=m/y.song.barCount,h=o/(y.song.beatsPerBar*t.Config.partsPerBeat),r=(s-1)/n,c=(s-1)/t.Config.drumCount;for(let e=0;e<y.song.barCount+1;e++){const i=e==y.song.loopStart||e==y.song.loopStart+y.song.loopLength?t.ColorConfig.loopAccent:t.ColorConfig.uiWidgetBackground;D.appendChild(a({x:e*o-1,y:0,width:2,height:s,fill:i}))}for(let e=0;e<=i;e++)D.appendChild(a({x:0,y:12*e*r,width:m,height:r+1,fill:t.ColorConfig.tonic,opacity:.75}));for(let e=y.song.channels.length-1;e>=0;e--){const n=y.song.getChannelIsNoise(e),a=n?c:r,f=y.song.channels[e].octave,u=(i-t.Config.windowOctaves)/2,p=t.Config.pitchOctaves-i,d=p/2;let m=f-t.Config.scrollableOctaves/2;Math.abs(m)<=u?m=0:m<0?m+=u:m-=u;const g=Math.max(0,Math.min(p,Math.round(d+m)))*a*12+s-.5*a-.5;for(let s=0;s<y.song.barCount;s++){const i=y.song.getPattern(e,s);if(null==i)continue;const r=s*o;for(let s=0;s<i.notes.length;s++){const o=i.notes[s];for(const s of o.pitches){const i=G(s,o.start,o.pins,(a+1)/2,r,g,h,a),c=l({d:i,fill:t.ColorConfig.getChannelColor(y.song,e).primaryChannel});n&&(c.style.opacity=String(.6)),D.appendChild(c)}}}}K()}function G(t,e,s,i,n,o,h,r){let a=`M ${n+h*(e+s[0].time)} ${o-t*r+i*(s[0].volume/3)} `;for(let l=0;l<s.length;l++){const c=s[l];a+=`L ${n+h*(e+c.time)} ${o-r*(t+c.interval)-i*(c.volume/3)} `}for(let l=s.length-1;l>=0;l--){const c=s[l];a+=`L ${n+h*(e+c.time)} ${o-r*(t+c.interval)+i*(c.volume/3)} `}return a}function Q(){y.playing?(x.classList.remove("playButton"),x.classList.add("pauseButton"),x.title="Pause (Space)",x.innerText="Pause"):(x.classList.remove("pauseButton"),x.classList.add("playButton"),x.title="Play (Space)",x.innerText="Play"),p=y.playing}function q(){C.setAttribute("fill",-1==y.loopRepeatCount?t.ColorConfig.linkAccent:t.ColorConfig.uiWidgetBackground)}function J(){T.style.color=d?t.ColorConfig.linkAccent:t.ColorConfig.uiWidgetBackground}document.body.appendChild(I),document.body.appendChild(i({style:"flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center;"},S,P,B,E,F,g,b,v,w,M)),top!==self?(v.style.display="none",w.style.display="none"):(M.style.display="none","share"in navigator||(w.style.display="none")),null!=localStorage.getItem("volume")&&(E.value=localStorage.getItem("volume")),j(),window.addEventListener("resize",function(){V()}),window.addEventListener("keydown",function(t){switch(t.keyCode){case 32:N(),t.preventDefault();break;case 219:y.prevBar(),K(),t.preventDefault();break;case 221:y.nextBar(),K(),t.preventDefault()}}),D.addEventListener("mousedown",function(t){k=!0,R(t)}),window.addEventListener("mousemove",R),window.addEventListener("mouseup",W),D.addEventListener("touchstart",function(t){k=!0,$(t)}),D.addEventListener("touchmove",$),D.addEventListener("touchend",W),D.addEventListener("touchcancel",W),x.addEventListener("click",N),P.addEventListener("click",function(){-1==y.loopRepeatCount?y.loopRepeatCount=0:y.loopRepeatCount=-1,q()}),E.addEventListener("input",function(){localStorage.setItem("volume",E.value),j()}),F.addEventListener("click",function(){d=!d,J(),V()}),v.addEventListener("click",function(){if(navigator.clipboard&&navigator.clipboard.writeText)return void navigator.clipboard.writeText(location.href).catch(()=>{window.prompt("Copy to clipboard:",location.href)});const t=document.createElement("textarea");t.innerText=location.href,document.body.appendChild(t),t.select();const e=document.execCommand("copy");t.remove(),e||window.prompt("Copy this:",location.href)}),w.addEventListener("click",function(){navigator.share({url:location.href})}),window.addEventListener("hashchange",L),L(),q(),J(),Q()}(beepbox||(beepbox={}));